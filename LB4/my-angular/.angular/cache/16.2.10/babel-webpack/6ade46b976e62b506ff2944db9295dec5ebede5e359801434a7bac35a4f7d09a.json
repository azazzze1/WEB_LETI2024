{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\nimport * as i2 from \"ngx-cookie-service\";\nexport class FriendsComponent {\n  constructor(dataService, cookieService) {\n    this.dataService = dataService;\n    this.cookieService = cookieService;\n    this.userID = this.cookieService.get('userID');\n  }\n  ngOnInit() {\n    this.dataService.getUserStorage().subscribe(res => {\n      let _userData = JSON.stringify(res);\n      let userData = JSON.parse(_userData) || [];\n      this.usersStorage = userData;\n      this.friendsIDs = JSON.parse(userData[this.userID].friends);\n      console.log(this.friendsIDs);\n    });\n  }\n  static #_ = this.ɵfac = function FriendsComponent_Factory(t) {\n    return new (t || FriendsComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.CookieService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FriendsComponent,\n    selectors: [[\"app-friends\"]],\n    decls: 10,\n    vars: 4,\n    consts: [[\"ngFor\", \"let friend of friendsIDs\", 1, \"lol\"], [2, \"background-color\", \"aqua\"], [3, \"src\"]],\n    template: function FriendsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\")(1, \"li\", 0)(2, \"p\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 1);\n        i0.ɵɵelement(5, \"img\", 2);\n        i0.ɵɵelementStart(6, \"span\");\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"span\");\n        i0.ɵɵtext(9, \"[admin]\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.friend);\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate1(\"src\", \"/assets/images/avatar/\", ctx.friend, \".png\", i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\"\", ctx.usersStorage[ctx.friend].surname, \" \", ctx.usersStorage[ctx.friend].name, \"\");\n      }\n    },\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["FriendsComponent","constructor","dataService","cookieService","userID","get","ngOnInit","getUserStorage","subscribe","res","_userData","JSON","stringify","userData","parse","usersStorage","friendsIDs","friends","console","log","_","i0","ɵɵdirectiveInject","i1","DataService","i2","CookieService","_2","selectors","decls","vars","consts","template","FriendsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","friend","ɵɵpropertyInterpolate1","ɵɵsanitizeUrl","ɵɵtextInterpolate2","surname","name"],"sources":["/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/friends.component.ts","/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/friends.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from './data.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n    selector: 'app-friends',\n    templateUrl: 'friends.component.html'\n})\n\n\nexport class FriendsComponent {\n    usersStorage: any;\n    userID : any = this.cookieService.get('userID'); \n    friendsIDs : any;\n    \n    constructor(public dataService: DataService,\n        private cookieService: CookieService) {}\n\n    ngOnInit(){\n        this.dataService.getUserStorage().subscribe((res)=>{\n            let _userData = JSON.stringify(res);\n            let userData = JSON.parse(_userData) || [];\n            this.usersStorage = userData;\n\n            this.friendsIDs = JSON.parse(userData[this.userID].friends);\n            console.log(this.friendsIDs);\n        })\n    }\n}\n","\n<ul>\n    <li ngFor=\"let friend of friendsIDs\" class=\"lol\">\n        <p>{{friend}}</p>\n        <div style=\"background-color: aqua;\">\n            <img src = \"/assets/images/avatar/{{friend}}.png\">\n            <span>{{usersStorage[friend].surname}}  {{usersStorage[friend].name}}</span>\n            <span>[admin]</span>\n        </div>\n    </li>\n</ul>  \n"],"mappings":";;;AAUA,OAAM,MAAOA,gBAAgB;EAKzBC,YAAmBC,WAAwB,EAC/BC,aAA4B;IADrB,KAAAD,WAAW,GAAXA,WAAW;IAClB,KAAAC,aAAa,GAAbA,aAAa;IAJzB,KAAAC,MAAM,GAAS,IAAI,CAACD,aAAa,CAACE,GAAG,CAAC,QAAQ,CAAC;EAIJ;EAE3CC,QAAQA,CAAA;IACJ,IAAI,CAACJ,WAAW,CAACK,cAAc,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MAC/C,IAAIC,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC;MACnC,IAAII,QAAQ,GAAGF,IAAI,CAACG,KAAK,CAACJ,SAAS,CAAC,IAAI,EAAE;MAC1C,IAAI,CAACK,YAAY,GAAGF,QAAQ;MAE5B,IAAI,CAACG,UAAU,GAAGL,IAAI,CAACG,KAAK,CAACD,QAAQ,CAAC,IAAI,CAACT,MAAM,CAAC,CAACa,OAAO,CAAC;MAC3DC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,UAAU,CAAC;IAChC,CAAC,CAAC;EACN;EAAC,QAAAI,CAAA,G;qBAjBQpB,gBAAgB,EAAAqB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAhB3B,gBAAgB;IAAA4B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT7Bb,EAAA,CAAAe,cAAA,SAAI;QAEOf,EAAA,CAAAgB,MAAA,GAAU;QAAAhB,EAAA,CAAAiB,YAAA,EAAI;QACjBjB,EAAA,CAAAe,cAAA,aAAqC;QACjCf,EAAA,CAAAkB,SAAA,aAAkD;QAClDlB,EAAA,CAAAe,cAAA,WAAM;QAAAf,EAAA,CAAAgB,MAAA,GAA+D;QAAAhB,EAAA,CAAAiB,YAAA,EAAO;QAC5EjB,EAAA,CAAAe,cAAA,WAAM;QAAAf,EAAA,CAAAgB,MAAA,cAAO;QAAAhB,EAAA,CAAAiB,YAAA,EAAO;;;QAJrBjB,EAAA,CAAAmB,SAAA,GAAU;QAAVnB,EAAA,CAAAoB,iBAAA,CAAAN,GAAA,CAAAO,MAAA,CAAU;QAEJrB,EAAA,CAAAmB,SAAA,GAA4C;QAA5CnB,EAAA,CAAAsB,sBAAA,kCAAAR,GAAA,CAAAO,MAAA,UAAArB,EAAA,CAAAuB,aAAA,CAA4C;QAC3CvB,EAAA,CAAAmB,SAAA,GAA+D;QAA/DnB,EAAA,CAAAwB,kBAAA,KAAAV,GAAA,CAAApB,YAAA,CAAAoB,GAAA,CAAAO,MAAA,EAAAI,OAAA,OAAAX,GAAA,CAAApB,YAAA,CAAAoB,GAAA,CAAAO,MAAA,EAAAK,IAAA,KAA+D"},"metadata":{},"sourceType":"module","externalDependencies":[]}