{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\nimport * as i2 from \"ngx-cookie-service\";\nexport class FriendsComponent {\n  constructor(dataService, cookieService) {\n    this.dataService = dataService;\n    this.cookieService = cookieService;\n    this.userID = this.cookieService.get('userID');\n  }\n  ngOnInit() {\n    this.dataService.getUserStorage().subscribe(res => {\n      let _userData = JSON.stringify(res);\n      let userData = JSON.parse(_userData) || [];\n      this.usersStorage = userData;\n      let countID = 1;\n      this.userPostsList.pop();\n      for (let friend of JSON.parse(userData[this.userID - 1].friends)) {\n        for (let post of JSON.parse(userData[friend - 1].post)) {\n          this.userPostsList.push({\n            \"id\": countID++,\n            \"author\": userData[friend - 1].name + \" \" + userData[friend - 1].surname,\n            \"text\": post,\n            \"user\": friend\n          });\n        }\n        countID = 1;\n      }\n      let comp = (a, b) => {\n        return b.id - a.id;\n      };\n      this.userPostsList.sort(comp);\n      this.userPostsString = JSON.stringify(this.userPostsList);\n      console.log(this.userPostsList);\n    });\n  }\n  static #_ = this.ɵfac = function FriendsComponent_Factory(t) {\n    return new (t || FriendsComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.CookieService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FriendsComponent,\n    selectors: [[\"app-friends\"]],\n    decls: 0,\n    vars: 0,\n    template: function FriendsComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["FriendsComponent","constructor","dataService","cookieService","userID","get","ngOnInit","getUserStorage","subscribe","res","_userData","JSON","stringify","userData","parse","usersStorage","countID","userPostsList","pop","friend","friends","post","push","name","surname","comp","a","b","id","sort","userPostsString","console","log","_","i0","ɵɵdirectiveInject","i1","DataService","i2","CookieService","_2","selectors","decls","vars","template","FriendsComponent_Template","rf","ctx","encapsulation"],"sources":["/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/friends.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from './data.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n    selector: 'app-friends',\n    templateUrl: 'friends.component.html'\n})\n\n\nexport class FriendsComponent {\n    usersStorage: any;\n    userID : any = this.cookieService.get('userID'); \n    \n    constructor(public dataService: DataService,\n        private cookieService: CookieService) {}\n\n    ngOnInit(){\n        this.dataService.getUserStorage().subscribe((res)=>{\n            let _userData = JSON.stringify(res);\n            let userData = JSON.parse(_userData) || [];\n            this.usersStorage = userData;\n\n            let countID = 1;\n            this.userPostsList.pop();\n\n            for(let friend of JSON.parse(userData[this.userID - 1].friends)){\n                for(let post of JSON.parse(userData[friend-1].post)){\n                    this.userPostsList.push({\"id\": countID++, \"author\": userData[friend - 1].name + \" \" + userData[friend - 1].surname, \"text\": post, \"user\": friend});\n                }          \n                countID = 1;\n            }\n    \n            let comp = ((a : any, b : any) => {\n                return (b.id-a.id); \n            });\n    \n            this.userPostsList.sort(comp);\n            \n            this.userPostsString = JSON.stringify(this.userPostsList);\n            console.log(this.userPostsList);\n        })\n    }\n}\n"],"mappings":";;;AAUA,OAAM,MAAOA,gBAAgB;EAIzBC,YAAmBC,WAAwB,EAC/BC,aAA4B;IADrB,KAAAD,WAAW,GAAXA,WAAW;IAClB,KAAAC,aAAa,GAAbA,aAAa;IAHzB,KAAAC,MAAM,GAAS,IAAI,CAACD,aAAa,CAACE,GAAG,CAAC,QAAQ,CAAC;EAGJ;EAE3CC,QAAQA,CAAA;IACJ,IAAI,CAACJ,WAAW,CAACK,cAAc,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MAC/C,IAAIC,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC;MACnC,IAAII,QAAQ,GAAGF,IAAI,CAACG,KAAK,CAACJ,SAAS,CAAC,IAAI,EAAE;MAC1C,IAAI,CAACK,YAAY,GAAGF,QAAQ;MAE5B,IAAIG,OAAO,GAAG,CAAC;MACf,IAAI,CAACC,aAAa,CAACC,GAAG,EAAE;MAExB,KAAI,IAAIC,MAAM,IAAIR,IAAI,CAACG,KAAK,CAACD,QAAQ,CAAC,IAAI,CAACT,MAAM,GAAG,CAAC,CAAC,CAACgB,OAAO,CAAC,EAAC;QAC5D,KAAI,IAAIC,IAAI,IAAIV,IAAI,CAACG,KAAK,CAACD,QAAQ,CAACM,MAAM,GAAC,CAAC,CAAC,CAACE,IAAI,CAAC,EAAC;UAChD,IAAI,CAACJ,aAAa,CAACK,IAAI,CAAC;YAAC,IAAI,EAAEN,OAAO,EAAE;YAAE,QAAQ,EAAEH,QAAQ,CAACM,MAAM,GAAG,CAAC,CAAC,CAACI,IAAI,GAAG,GAAG,GAAGV,QAAQ,CAACM,MAAM,GAAG,CAAC,CAAC,CAACK,OAAO;YAAE,MAAM,EAAEH,IAAI;YAAE,MAAM,EAAEF;UAAM,CAAC,CAAC;;QAEtJH,OAAO,GAAG,CAAC;;MAGf,IAAIS,IAAI,GAAIA,CAACC,CAAO,EAAEC,CAAO,KAAI;QAC7B,OAAQA,CAAC,CAACC,EAAE,GAACF,CAAC,CAACE,EAAE;MACrB,CAAE;MAEF,IAAI,CAACX,aAAa,CAACY,IAAI,CAACJ,IAAI,CAAC;MAE7B,IAAI,CAACK,eAAe,GAAGnB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACK,aAAa,CAAC;MACzDc,OAAO,CAACC,GAAG,CAAC,IAAI,CAACf,aAAa,CAAC;IACnC,CAAC,CAAC;EACN;EAAC,QAAAgB,CAAA,G;qBAhCQjC,gBAAgB,EAAAkC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAhBxC,gBAAgB;IAAAyC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAAC,aAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}