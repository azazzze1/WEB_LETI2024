{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class MessengerComponent {\n  constructor() {\n    this.userID = this.cookieService.get('userID');\n  }\n  static #_ = this.ɵfac = function MessengerComponent_Factory(t) {\n    return new (t || MessengerComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MessengerComponent,\n    selectors: [[\"app-messenger\"]],\n    decls: 0,\n    vars: 0,\n    template: function MessengerComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n}\n{}\nngOnInit();\n{\n  this.dataService.getUserStorage().subscribe(res => {\n    let _userData = JSON.stringify(res);\n    let userData = JSON.parse(_userData) || [];\n    this.usersStorage = userData;\n  });\n  this.friendList.pop();\n  let friendsIDs = JSON.parse(userData[this.userID - 1].friends);\n  for (let i of friendsIDs) {\n    this.friendList.push(userData[i - 1]);\n  }\n}","map":{"version":3,"names":["MessengerComponent","constructor","userID","cookieService","get","_","_2","selectors","decls","vars","template","MessengerComponent_Template","rf","ctx","encapsulation","ngOnInit","dataService","getUserStorage","subscribe","res","_userData","JSON","stringify","userData","parse","usersStorage","friendList","pop","friendsIDs","friends","i","push"],"sources":["/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/messenger.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from './data.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n    selector: 'app-messenger',\n    templateUrl: 'messenger.component.html'\n})\n\n\nexport class MessengerComponent {\n    usersStorage: any;\n\n    userDialogs: any;\n    userID : any = this.cookieService.get('userID'); \n\n    friendList :\n    \n    constructor(public dataService: DataService,\n        private cookieService: CookieService) {}\n\n    ngOnInit(){\n        this.dataService.getUserStorage().subscribe((res)=>{\n            let _userData = JSON.stringify(res);\n            let userData = JSON.parse(_userData) || [];\n            this.usersStorage = userData;\n        })\n\n        this.friendList.pop();\n\n        let friendsIDs = JSON.parse(userData[this.userID-1].friends);\n        for(let i of friendsIDs){\n            this.friendList.push(userData[i-1]);\n        }\n\n    }\n\n\n}\n"],"mappings":";AAUA,OAAM,MAAOA,kBAAkB;EAN/BC,YAAA;IAUI,KAAAC,MAAM,GAAS,IAAI,CAACC,aAAa,CAACC,GAAG,CAAC,QAAQ,CAAC;;EAKN,QAAAC,CAAA,G;qBAThCL,kBAAkB;EAAA;EAAA,QAAAM,EAAA,G;UAAlBN,kBAAkB;IAAAO,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAAC,aAAA;EAAA;;AASe;AAE1CC,QAAQ,EAAE;AAAA;EACN,IAAI,CAACC,WAAW,CAACC,cAAc,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;IAC/C,IAAIC,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC;IACnC,IAAII,QAAQ,GAAGF,IAAI,CAACG,KAAK,CAACJ,SAAS,CAAC,IAAI,EAAE;IAC1C,IAAI,CAACK,YAAY,GAAGF,QAAQ;EAChC,CAAC,CAAC;EAEF,IAAI,CAACG,UAAU,CAACC,GAAG,EAAE;EAErB,IAAIC,UAAU,GAAGP,IAAI,CAACG,KAAK,CAACD,QAAQ,CAAC,IAAI,CAACrB,MAAM,GAAC,CAAC,CAAC,CAAC2B,OAAO,CAAC;EAC5D,KAAI,IAAIC,CAAC,IAAIF,UAAU,EAAC;IACpB,IAAI,CAACF,UAAU,CAACK,IAAI,CAACR,QAAQ,CAACO,CAAC,GAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}