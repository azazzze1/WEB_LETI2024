{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    this.usersStorage = [{}];\n    this.curUserID = new BehaviorSubject(0);\n    this.curUserID$ = this.curUserID;\n    this.curUserFullName = new BehaviorSubject(\"Гостевой аккаунт\");\n    this.curUserFullName$ = this.curUserFullName;\n  }\n  getUserStorage() {\n    return this.http.get('http://localhost:3000/usersListStorage.json');\n  }\n  getUserStorage(firstUser) {\n    return this.http.get('http://localhost:3000/usersListStorage.json');\n  }\n  changeUserID(newID) {\n    this.curUserID.next(newID);\n  }\n  changeUserFullName(newName) {\n    this.curUserFullName.next(newName);\n  }\n  sendUserListStorage(newList) {\n    console.log(\"DATA\", newList);\n    const params = new HttpParams().set('newUserListParam', JSON.stringify(newList));\n    return this.http.get('http://localhost:3000/changeUserListStorage', {\n      params\n    });\n  }\n  checkParams() {\n    console.log(\"private: \", this.curUserFullName, this.curUserID);\n    console.log(\"public: \", this.curUserFullName$, this.curUserID$);\n  }\n  static #_ = this.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpParams","BehaviorSubject","DataService","constructor","http","usersStorage","curUserID","curUserID$","curUserFullName","curUserFullName$","getUserStorage","get","firstUser","changeUserID","newID","next","changeUserFullName","newName","sendUserListStorage","newList","console","log","params","set","JSON","stringify","checkParams","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/data.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\n\n\n@Injectable({providedIn: 'root'})\nexport class DataService{\n\n    public usersStorage = [{}];\n\n    public curUserID = new BehaviorSubject(0);\n    public curUserID$ : Observable<number> = this.curUserID;\n\n    public curUserFullName = new BehaviorSubject(\"Гостевой аккаунт\");\n    public curUserFullName$ : Observable<string> = this.curUserFullName;\n\n    constructor(private http: HttpClient){ }\n\n    getUserStorage() : Observable<object>{\n        return this.http.get<object>('http://localhost:3000/usersListStorage.json');\n    }\n\n    getUserStorage(firstUser ) : Observable<object>{\n        return this.http.get<object>('http://localhost:3000/usersListStorage.json');\n    }\n\n    changeUserID(newID : number) : void {\n        this.curUserID.next(newID);\n    }\n\n    changeUserFullName(newName : string) : void{\n        this.curUserFullName.next(newName); \n    }\n\n    sendUserListStorage(newList : [{}]) {\n        console.log(\"DATA\", newList);\n        const params = new HttpParams().set('newUserListParam', JSON.stringify(newList));\n        return this.http.get('http://localhost:3000/changeUserListStorage', {params}); \n    }\n\n    checkParams() : void{\n        console.log(\"private: \", this.curUserFullName, this.curUserID);\n        console.log(\"public: \", this.curUserFullName$, this.curUserID$);\n    }\n\n}\n\n"],"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;AAE7D,SAAqBC,eAAe,QAAiB,MAAM;;;AAI3D,OAAM,MAAOC,WAAW;EAUpBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IARjB,KAAAC,YAAY,GAAG,CAAC,EAAE,CAAC;IAEnB,KAAAC,SAAS,GAAG,IAAIL,eAAe,CAAC,CAAC,CAAC;IAClC,KAAAM,UAAU,GAAwB,IAAI,CAACD,SAAS;IAEhD,KAAAE,eAAe,GAAG,IAAIP,eAAe,CAAC,kBAAkB,CAAC;IACzD,KAAAQ,gBAAgB,GAAwB,IAAI,CAACD,eAAe;EAE5B;EAEvCE,cAAcA,CAAA;IACV,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAS,6CAA6C,CAAC;EAC/E;EAEAD,cAAcA,CAACE,SAAS;IACpB,OAAO,IAAI,CAACR,IAAI,CAACO,GAAG,CAAS,6CAA6C,CAAC;EAC/E;EAEAE,YAAYA,CAACC,KAAc;IACvB,IAAI,CAACR,SAAS,CAACS,IAAI,CAACD,KAAK,CAAC;EAC9B;EAEAE,kBAAkBA,CAACC,OAAgB;IAC/B,IAAI,CAACT,eAAe,CAACO,IAAI,CAACE,OAAO,CAAC;EACtC;EAEAC,mBAAmBA,CAACC,OAAc;IAC9BC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,OAAO,CAAC;IAC5B,MAAMG,MAAM,GAAG,IAAItB,UAAU,EAAE,CAACuB,GAAG,CAAC,kBAAkB,EAAEC,IAAI,CAACC,SAAS,CAACN,OAAO,CAAC,CAAC;IAChF,OAAO,IAAI,CAACf,IAAI,CAACO,GAAG,CAAC,6CAA6C,EAAE;MAACW;IAAM,CAAC,CAAC;EACjF;EAEAI,WAAWA,CAAA;IACPN,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACb,eAAe,EAAE,IAAI,CAACF,SAAS,CAAC;IAC9Dc,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,IAAI,CAACZ,gBAAgB,EAAE,IAAI,CAACF,UAAU,CAAC;EACnE;EAAC,QAAAoB,CAAA,G;qBArCQzB,WAAW,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX9B,WAAW;IAAA+B,OAAA,EAAX/B,WAAW,CAAAgC,IAAA;IAAAC,UAAA,EADC;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}