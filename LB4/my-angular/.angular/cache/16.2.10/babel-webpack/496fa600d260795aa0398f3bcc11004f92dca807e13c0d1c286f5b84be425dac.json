{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet UserPost = class UserPost {\n  constructor(id, title, text) {\n    this.id = id;\n    this.title = title;\n    this.text = text;\n  }\n};\nUserPost = __decorate([Component({\n  selector: 'app-news',\n  templateUrl: 'news.component.html'\n})], UserPost);\nexport class NewsComponent {\n  constructor(dataService, cookieService) {\n    this.dataService = dataService;\n    this.cookieService = cookieService;\n    this.userID = this.cookieService.get('userID');\n    this.lol = 0;\n    this.userPost = new UserPost(0, \"\", \"\");\n    this.userPostsList = [];\n    this.countID = 1;\n  }\n  ngOnInit() {\n    this.dataService.getUserStorage().subscribe(res => {\n      let _userData = JSON.stringify(res);\n      let userData = JSON.parse(_userData) || [];\n      this.usersStorage = userData;\n      let countID = 1;\n      this.userPostsList.pop();\n      for (let friend of JSON.parse(userData[this.userID - 1].friends)) {\n        for (let post of JSON.parse(userData[friend - 1].post)) {\n          this.userPostsList.push(new UserPost(\"id\", countID++, \"author\", userData[friend - 1].name + \" \" + userData[friend - 1].surname, \"text\", post));\n        }\n      }\n    });\n  }\n}\nlet comp = (a, b) => {\n  return b.id - a.id;\n};\nthis.userPostsList.sort(comp);\nthis.userPostsString = JSON.stringify(this.userPostsList);\nconsole.log(this.userPostsList);","map":{"version":3,"names":["Component","UserPost","constructor","id","title","text","__decorate","selector","templateUrl","NewsComponent","dataService","cookieService","userID","get","lol","userPost","userPostsList","countID","ngOnInit","getUserStorage","subscribe","res","_userData","JSON","stringify","userData","parse","usersStorage","pop","friend","friends","post","push","name","surname","comp","a","b","sort","userPostsString","console","log"],"sources":["/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/news.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from './data.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n    selector: 'app-news',\n    templateUrl: 'news.component.html'\n})\n\nclass UserPost{\n    id: number;\n    title: string;\n    text: string;\n    constructor(id: number, title: string, text: string) {\n        this.id = id;\n        this.title = title;\n        this.text = text;\n    }\n}\n\nexport class NewsComponent {\n    usersStorage: any;\n    userID : any = this.cookieService.get('userID'); \n\n    lol: number = 0;\n\n    userPost = new UserPost(0,\"\",\"\");\n\n    public userPostsList : UserPost[] = [];\n    \n    constructor(public dataService: DataService,\n        private cookieService: CookieService) {}\n\n    ngOnInit(){\n        this.dataService.getUserStorage().subscribe((res)=>{\n            let _userData = JSON.stringify(res);\n            let userData = JSON.parse(_userData) || [];\n            this.usersStorage = userData;\n\n            let countID = 1;\n            this.userPostsList.pop();\n\n            for(let friend of JSON.parse(userData[this.userID - 1].friends)){\n                for(let post of JSON.parse(userData[friend-1].post)){\n                    this.userPostsList.push(new UserPost (\"id\": countID++, \"author\": userData[friend - 1].name + \" \" + userData[friend - 1].surname, \"text\": post});\n                }          \n                countID = 1;\n            }\n    \n            let comp = ((a : any, b : any) => {\n                return (b.id-a.id); \n            });\n    \n            this.userPostsList.sort(comp);\n            \n            this.userPostsString = JSON.stringify(this.userPostsList);\n            console.log(this.userPostsList);\n        })\n    }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASzC,IAAMC,QAAQ,GAAd,MAAMA,QAAQ;EAIVC,YAAYC,EAAU,EAAEC,KAAa,EAAEC,IAAY;IAC/C,IAAI,CAACF,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,IAAI,GAAGA,IAAI;EACpB;CACH;AATKJ,QAAQ,GAAAK,UAAA,EALbN,SAAS,CAAC;EACPO,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE;CAChB,CAAC,C,EAEIP,QAAQ,CASb;AAED,OAAM,MAAOQ,aAAa;EAUtBP,YAAmBQ,WAAwB,EAC/BC,aAA4B;IADrB,KAAAD,WAAW,GAAXA,WAAW;IAClB,KAAAC,aAAa,GAAbA,aAAa;IATzB,KAAAC,MAAM,GAAS,IAAI,CAACD,aAAa,CAACE,GAAG,CAAC,QAAQ,CAAC;IAE/C,KAAAC,GAAG,GAAW,CAAC;IAEf,KAAAC,QAAQ,GAAG,IAAId,QAAQ,CAAC,CAAC,EAAC,EAAE,EAAC,EAAE,CAAC;IAEzB,KAAAe,aAAa,GAAgB,EAAE;IAkB1B,KAAAC,OAAO,GAAG,CAAC;EAfoB;EAE3CC,QAAQA,CAAA;IACJ,IAAI,CAACR,WAAW,CAACS,cAAc,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MAC/C,IAAIC,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC;MACnC,IAAII,QAAQ,GAAGF,IAAI,CAACG,KAAK,CAACJ,SAAS,CAAC,IAAI,EAAE;MAC1C,IAAI,CAACK,YAAY,GAAGF,QAAQ;MAE5B,IAAIR,OAAO,GAAG,CAAC;MACf,IAAI,CAACD,aAAa,CAACY,GAAG,EAAE;MAExB,KAAI,IAAIC,MAAM,IAAIN,IAAI,CAACG,KAAK,CAACD,QAAQ,CAAC,IAAI,CAACb,MAAM,GAAG,CAAC,CAAC,CAACkB,OAAO,CAAC,EAAC;QAC5D,KAAI,IAAIC,IAAI,IAAIR,IAAI,CAACG,KAAK,CAACD,QAAQ,CAACI,MAAM,GAAC,CAAC,CAAC,CAACE,IAAI,CAAC,EAAC;UAChD,IAAI,CAACf,aAAa,CAACgB,IAAI,CAAC,IAAI/B,QAAQ,CAAE,IAAI,EAAEgB,OAAO,EAAE,EAAE,QAAQ,EAAEQ,QAAQ,CAACI,MAAM,GAAG,CAAC,CAAC,CAACI,IAAI,GAAG,GAAG,GAAGR,QAAQ,CAACI,MAAM,GAAG,CAAC,CAAC,CAACK,OAAO,EAAE,MAAM,EAAEH,IAAI;;;IAAC,CAAC;EACnJ;;AAIJ,IAAII,IAAI,GAAIA,CAACC,CAAO,EAAEC,CAAO,KAAI;EAC7B,OAAQA,CAAC,CAAClC,EAAE,GAACiC,CAAC,CAACjC,EAAE;AACrB,CAAE;AAEF,IAAI,CAACa,aAAa,CAACsB,IAAI,CAACH,IAAI,CAAC;AAE7B,IAAI,CAACI,eAAe,GAAGhB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACR,aAAa,CAAC;AACzDwB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACzB,aAAa,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}