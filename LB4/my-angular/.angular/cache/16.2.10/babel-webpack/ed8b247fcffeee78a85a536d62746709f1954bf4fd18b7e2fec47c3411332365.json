{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    this.usersStorage = [];\n    this.curUserID = new BehaviorSubject(0);\n    this.curUserID$ = this.curUserID;\n    this.curUserFullName = new BehaviorSubject(\"Гостевой аккаунт\");\n    this.curUserFullName$ = this.curUserFullName;\n    this.lol = 1;\n  }\n  getUserStorage() {\n    return this.http.get('http://localhost:3000/usersListStorage.json');\n  }\n  changeUserID(newID) {\n    this.curUserID.next(newID);\n  }\n  changeUserFullName(newName) {\n    this.curUserFullName.next(newName);\n  }\n  checkParams() {\n    console.log(\"private: \", this.curUserFullName, this.curUserID);\n    console.log(\"public: \", this.curUserFullName$, this.curUserID$);\n    console.log(\"lol: \", this.lol);\n  }\n  static #_ = this.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","DataService","constructor","http","usersStorage","curUserID","curUserID$","curUserFullName","curUserFullName$","lol","getUserStorage","get","changeUserID","newID","next","changeUserFullName","newName","checkParams","console","log","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/data.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataService{\n\n    public usersStorage: object = [];\n\n    public curUserID = new BehaviorSubject(0);\n    public curUserID$ : Observable<number> = this.curUserID;\n\n    public curUserFullName = new BehaviorSubject(\"Гостевой аккаунт\");\n    public curUserFullName$ : Observable<string> = this.curUserFullName;\n\n    public lol : number = 1;\n\n    constructor(private http: HttpClient){ }\n\n    getUserStorage() : Observable<object>{\n        return this.http.get<object>('http://localhost:3000/usersListStorage.json');\n    }\n\n    changeUserID(newID : number) : void {\n        this.curUserID.next(newID);\n    }\n\n    changeUserFullName(newName : string) : void{\n        this.curUserFullName.next(newName); \n    }\n\n    checkParams() : void{\n        console.log(\"private: \", this.curUserFullName, this.curUserID);\n        console.log(\"public: \", this.curUserFullName$, this.curUserID$);\n        console.log(\"lol: \", this.lol);\n    }\n\n}\n\n"],"mappings":"AAEA,SAAqBA,eAAe,QAAiB,MAAM;;;AAM3D,OAAM,MAAOC,WAAW;EAYpBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAVjB,KAAAC,YAAY,GAAW,EAAE;IAEzB,KAAAC,SAAS,GAAG,IAAIL,eAAe,CAAC,CAAC,CAAC;IAClC,KAAAM,UAAU,GAAwB,IAAI,CAACD,SAAS;IAEhD,KAAAE,eAAe,GAAG,IAAIP,eAAe,CAAC,kBAAkB,CAAC;IACzD,KAAAQ,gBAAgB,GAAwB,IAAI,CAACD,eAAe;IAE5D,KAAAE,GAAG,GAAY,CAAC;EAEgB;EAEvCC,cAAcA,CAAA;IACV,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAS,6CAA6C,CAAC;EAC/E;EAEAC,YAAYA,CAACC,KAAc;IACvB,IAAI,CAACR,SAAS,CAACS,IAAI,CAACD,KAAK,CAAC;EAC9B;EAEAE,kBAAkBA,CAACC,OAAgB;IAC/B,IAAI,CAACT,eAAe,CAACO,IAAI,CAACE,OAAO,CAAC;EACtC;EAEAC,WAAWA,CAAA;IACPC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACZ,eAAe,EAAE,IAAI,CAACF,SAAS,CAAC;IAC9Da,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,IAAI,CAACX,gBAAgB,EAAE,IAAI,CAACF,UAAU,CAAC;IAC/DY,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,IAAI,CAACV,GAAG,CAAC;EAClC;EAAC,QAAAW,CAAA,G;qBA9BQnB,WAAW,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXxB,WAAW;IAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;IAAAC,UAAA,EAFR;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}