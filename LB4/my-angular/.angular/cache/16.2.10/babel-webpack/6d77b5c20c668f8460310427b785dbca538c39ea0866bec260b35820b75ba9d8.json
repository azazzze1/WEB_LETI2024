{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\nimport * as i2 from \"ngx-cookie-service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction FriendsComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 2);\n    i0.ɵɵelement(1, \"img\", 3);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3, \" \\u0428\\u0443\\u0448\\u043A\\u043E\\u0432 \\u0415\\u0433\\u043E\\u0440 \\u0412\\u0430\\u0441\\u0438\\u043B\\u044C\\u0435\\u0432\\u0438\\u0447 (2004-04-08)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5, \"[admin]\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"a\", 4);\n    i0.ɵɵtext(7, \"\\u0434\\u0440\\u0443\\u0437\\u044C\\u044F\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"a\", 5);\n    i0.ɵɵtext(9, \"\\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 6)(11, \"p\", 7);\n    i0.ɵɵtext(12, \" \\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"dialog\", 8)(14, \"form\", 9)(15, \"label\", 10)(16, \"p\");\n    i0.ɵɵtext(17, \"\\u0418\\u043C\\u044F: \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(18, \"input\", 11);\n    i0.ɵɵelementStart(19, \"label\", 12)(20, \"p\");\n    i0.ɵɵtext(21, \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F: \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(22, \"input\", 13);\n    i0.ɵɵelementStart(23, \"label\", 14)(24, \"p\");\n    i0.ɵɵtext(25, \"\\u041E\\u0442\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E: \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(26, \"input\", 15);\n    i0.ɵɵelementStart(27, \"label\", 16)(28, \"p\");\n    i0.ɵɵtext(29, \"\\u0414\\u0430\\u0442\\u0430 \\u0440\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F: \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(30, \"input\", 17)(31, \"br\");\n    i0.ɵɵelementStart(32, \"label\", 18)(33, \"span\");\n    i0.ɵɵtext(34, \"\\u041F\\u0440\\u0430\\u0432\\u0430 \\u0430\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u043E\\u0440\\u0430: \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(35, \"input\", 19)(36, \"br\")(37, \"button\", 20)(38, \"button\", 21);\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport class FriendsComponent {\n  constructor(dataService, cookieService) {\n    this.dataService = dataService;\n    this.cookieService = cookieService;\n    this.userID = this.cookieService.get('userID');\n    this.friendList = [{}];\n  }\n  ngOnInit() {\n    this.dataService.getUserStorage().subscribe(res => {\n      let _userData = JSON.stringify(res);\n      let userData = JSON.parse(_userData) || [];\n      this.usersStorage = userData;\n      this.friendList.pop();\n      let friendsIDs = JSON.parse(userData[this.userID - 1].friends);\n      for (let i of friendsIDs) {\n        this.friendList.push(userData[i - 1]);\n      }\n      console.log(this.friendList);\n    });\n  }\n  static #_ = this.ɵfac = function FriendsComponent_Factory(t) {\n    return new (t || FriendsComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.CookieService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FriendsComponent,\n    selectors: [[\"app-friends\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"news-list\"], [\"class\", \"friends-list-elem\", 4, \"ngFor\", \"ngForOf\"], [1, \"friends-list-elem\"], [\"src\", \"../public/images/avatars/1.jpg\", 1, \"user-avatar\"], [\"href\", \"/usersList/friends/1\", 1, \"user-list-ref\"], [\"href\", \"/usersList/posts/1\", 1, \"user-list-ref\"], [\"onclick\", \"window.updateUser1.showModal()\"], [1, \"fa-solid\", \"fa-pen-to-square\"], [\"id\", \"updateUser1\"], [\"action\", \"updateUser1\", \"method\", \"post\", 1, \"update-user-form\"], [\"for\", \"name\"], [\"type\", \"text\", \"name\", \"name\", \"required\", \"\", \"value\", \"\\u0415\\u0433\\u043E\\u0440\", 1, \"inputLabel\"], [\"for\", \"surname\"], [\"type\", \"text\", \"name\", \"surname\", \"required\", \"\", \"value\", \"\\u0428\\u0443\\u0448\\u043A\\u043E\\u0432\", 1, \"inputLabel\"], [\"for\", \"patronymic\"], [\"type\", \"text\", \"name\", \"patronymic\", \"required\", \"\", \"value\", \"\\u0412\\u0430\\u0441\\u0438\\u043B\\u044C\\u0435\\u0432\\u0438\\u0447\", 1, \"inputLabel\"], [\"for\", \"birthdate\"], [\"type\", \"date\", \"name\", \"birthdate\", \"required\", \"\", \"value\", \"2004-04-08\", 1, \"inputLabel\"], [\"for\", \"admin\"], [\"type\", \"checkbox\", \"name\", \"admin\", \"checked\", \"\", 1, \"inputLabel\"], [\"name\", \"user\", \"type\", \"submit\", \"value\", \"1\", 1, \"fa-solid\", \"fa-check\", \"menu-button\"], [\"type\", \"button\", \"onclick\", \"window.updateUser1.close()\", 1, \"fa-solid\", \"fa-xmark\", \"menu-button\"]],\n    template: function FriendsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\", 0);\n        i0.ɵɵtemplate(1, FriendsComponent_li_1_Template, 39, 0, \"li\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(2, \"`\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.friendList);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","FriendsComponent","constructor","dataService","cookieService","userID","get","friendList","ngOnInit","getUserStorage","subscribe","res","_userData","JSON","stringify","userData","parse","usersStorage","pop","friendsIDs","friends","i","push","console","log","_","ɵɵdirectiveInject","i1","DataService","i2","CookieService","_2","selectors","decls","vars","consts","template","FriendsComponent_Template","rf","ctx","ɵɵtemplate","FriendsComponent_li_1_Template","ɵɵadvance","ɵɵproperty"],"sources":["/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/friends.component.ts","/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/friends.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from './data.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n    selector: 'app-friends',\n    templateUrl: 'friends.component.html'\n})\n\nexport class FriendsComponent {\n    usersStorage: any;\n    userID : any = this.cookieService.get('userID'); \n\n    public friendList: any = [{}]; \n    \n    constructor(public dataService: DataService,\n        private cookieService: CookieService) {}\n\n    ngOnInit(){\n        this.dataService.getUserStorage().subscribe((res)=>{\n            let _userData = JSON.stringify(res);\n            let userData = JSON.parse(_userData) || [];\n            this.usersStorage = userData;\n            \n            this.friendList.pop();\n\n            let friendsIDs = JSON.parse(userData[this.userID-1].friends);\n            for(let i of friendsIDs){\n                this.friendList.push(userData[i-1]);\n            }\n\n            console.log(this.friendList);\n        })\n    }\n}\n","<ul class=\"news-list\">\n    <li *ngFor=\"let post of friendList; let i = index\" class=\"friends-list-elem\">\n        <img class=\"user-avatar\" src=\"../public/images/avatars/1.jpg\"><span> Шушков Егор Васильевич (2004-04-08)</span><span>[admin]</span><a class=\"user-list-ref\" href=\"/usersList/friends/1\">друзья</a><a class=\"user-list-ref\" href=\"/usersList/posts/1\">новости</a><button onclick=\"window.updateUser1.showModal()\"><p class=\"fa-solid fa-pen-to-square\"> Изменить данные</p></button><dialog id=\"updateUser1\"> <form class=\"update-user-form\" action=\"updateUser1\" method=\"post\"><label for=\"name\"><p>Имя: </p></label><input class=\"inputLabel\" type=\"text\" name=\"name\" required=\"\" value=\"Егор\"><label for=\"surname\"><p>Фамилия: </p></label><input class=\"inputLabel\" type=\"text\" name=\"surname\" required=\"\" value=\"Шушков\"><label for=\"patronymic\"><p>Отчество: </p></label><input class=\"inputLabel\" type=\"text\" name=\"patronymic\" required=\"\" value=\"Васильевич\"><label for=\"birthdate\"><p>Дата рождения: </p></label><input class=\"inputLabel\" type=\"date\" name=\"birthdate\" required=\"\" value=\"2004-04-08\"><br><label for=\"admin\"><span>Права администратора: </span></label><input class=\"inputLabel\" type=\"checkbox\" name=\"admin\" checked=\"\"><br><button class=\"fa-solid fa-check menu-button\" name=\"user\" type=\"submit\" value=\"1\"></button><button class=\"fa-solid fa-xmark menu-button\" type=\"button\" onclick=\"window.updateUser1.close()\"></button></form></dialog>\n    </li>\n</ul>`"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}