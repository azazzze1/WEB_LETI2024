{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\nexport class RegisterComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.name = \"\";\n    this.surname = \"\";\n    this.patronymic = \"\";\n    this.email = \"\";\n    this.Name = \"\";\n    this.Name = \"\";\n    this.comment = \"\";\n  }\n  ngOnInit() {\n    this.dataService.getUserStorage().subscribe(res => {\n      let _userData = JSON.stringify(res);\n      let userData = JSON.parse(_userData) || [];\n      this.usersStorage = userData;\n    });\n  }\n  searchUser() {\n    let userData = this.usersStorage;\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 0,\n    vars: 0,\n    template: function RegisterComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["RegisterComponent","constructor","dataService","name","surname","patronymic","email","Name","comment","ngOnInit","getUserStorage","subscribe","res","_userData","JSON","stringify","userData","parse","usersStorage","searchUser","_","i0","ɵɵdirectiveInject","i1","DataService","_2","selectors","decls","vars","template","RegisterComponent_Template","rf","ctx","encapsulation"],"sources":["/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from './data.service';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: 'register.component.html'\n})\n\nexport class RegisterComponent {\n    name: string = \"\";\n    surname: string = \"\";\n    patronymic: string = \"\";\n    email: string = \"\";\n    Name: string = \"\";\n    Name: string = \"\";\n    comment: string = \"\"; \n\n    // \"id\": \"1\",\n    // \"name\": \"Егор\",\n    // \"surname\": \"Шушков\",\n    // \"patronymic\": \"Васильевич\",\n    // \"email\": \"egorka44552014@gmail.com\",\n    // \"password\": \"1234eee\",\n    // \"birthdate\": \"2004-04-08\",\n    // \"role\": \"admin\",\n    // \"status\": \"active\",\n    // \"friends\": \"[2,3,4,5]\",\n    // \"post\": \"[\\\"Анекдо́т — фолькло\n\n    usersStorage: any;\n\n    constructor(public dataService: DataService) {}\n\n    ngOnInit(){\n        this.dataService.getUserStorage().subscribe((res)=>{\n            let _userData = JSON.stringify(res);\n            let userData = JSON.parse(_userData) || [];\n            this.usersStorage = userData;\n        })\n    }\n\n    searchUser(){\n        let userData = this.usersStorage;\n        \n    }\n\n\n}"],"mappings":";;AAQA,OAAM,MAAOA,iBAAiB;EAuB1BC,YAAmBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAtB9B,KAAAC,IAAI,GAAW,EAAE;IACjB,KAAAC,OAAO,GAAW,EAAE;IACpB,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,IAAI,GAAW,EAAE;IACjB,KAAAA,IAAI,GAAW,EAAE;IACjB,KAAAC,OAAO,GAAW,EAAE;EAgB0B;EAE9CC,QAAQA,CAAA;IACJ,IAAI,CAACP,WAAW,CAACQ,cAAc,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MAC/C,IAAIC,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC;MACnC,IAAII,QAAQ,GAAGF,IAAI,CAACG,KAAK,CAACJ,SAAS,CAAC,IAAI,EAAE;MAC1C,IAAI,CAACK,YAAY,GAAGF,QAAQ;IAChC,CAAC,CAAC;EACN;EAEAG,UAAUA,CAAA;IACN,IAAIH,QAAQ,GAAG,IAAI,CAACE,YAAY;EAEpC;EAAC,QAAAE,CAAA,G;qBApCQpB,iBAAiB,EAAAqB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjBzB,iBAAiB;IAAA0B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;IAAAC,aAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}