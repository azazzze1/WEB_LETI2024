{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let MessengerComponent = class MessengerComponent {\n  constructor(dataService, cookieService) {\n    this.dataService = dataService;\n    this.cookieService = cookieService;\n    this.messenge = \"Напишите сообщение…\";\n    this.userDialogs = [{}];\n    this.currentDialog = {};\n    this.userID = this.cookieService.get('userID');\n    this.friendList = [{}];\n  }\n  ngOnInit() {\n    this.dataService.getUserStorage().subscribe(res => {\n      let _userData = JSON.stringify(res);\n      let userData = JSON.parse(_userData) || [];\n      this.usersStorage = userData;\n      this.friendList.pop();\n      this.userDialogs.pop();\n      let friendsIDs = JSON.parse(userData[this.userID - 1].friends);\n      for (let i of friendsIDs) {\n        this.friendList.push(userData[i - 1]);\n      }\n      for (let i of friendsIDs) {\n        this.dataService.getUserDialog(this.userID, i).subscribe(res => {\n          let friendDialog = {\n            \"id\": i,\n            \"dialog\": res\n          };\n          this.userDialogs.push(friendDialog);\n        });\n      }\n    });\n  }\n  checkDialog(event) {\n    let eID = event.originalTarget.id;\n    if (eID) {\n      for (let i of this.userDialogs) {\n        if (i.id == eID) {\n          this.currentDialog = i.dialog;\n          break;\n        }\n      }\n      console.log(this.currentDialog);\n    }\n    console.log(eID);\n  }\n};\nMessengerComponent = __decorate([Component({\n  selector: 'app-messenger',\n  templateUrl: 'messenger.component.html',\n  styleUrls: [\"friends.component.less\"]\n})], MessengerComponent);","map":{"version":3,"names":["Component","MessengerComponent","constructor","dataService","cookieService","messenge","userDialogs","currentDialog","userID","get","friendList","ngOnInit","getUserStorage","subscribe","res","_userData","JSON","stringify","userData","parse","usersStorage","pop","friendsIDs","friends","i","push","getUserDialog","friendDialog","checkDialog","event","eID","originalTarget","id","dialog","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/messenger.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from './data.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n    selector: 'app-messenger',\n    templateUrl: 'messenger.component.html',\n    styleUrls: [\"friends.component.less\"]\n})\n\n\nexport class MessengerComponent {\n    usersStorage: any;\n    messenge : string = \"Напишите сообщение…\";\n\n    userDialogs: any = [{}];\n\n    currentDialog : any = {}\n    userID : any = this.cookieService.get('userID'); \n\n    friendList : any = [{}];\n    \n    constructor(public dataService: DataService,\n        private cookieService: CookieService) {}\n\n    ngOnInit(){\n        this.dataService.getUserStorage().subscribe((res)=>{\n            let _userData = JSON.stringify(res);\n            let userData = JSON.parse(_userData) || [];\n            this.usersStorage = userData;\n\n            this.friendList.pop();\n            this.userDialogs.pop();\n\n            let friendsIDs = JSON.parse(userData[this.userID-1].friends);\n            for(let i of friendsIDs){\n                this.friendList.push(userData[i-1]);\n            }\n\n            for(let i of friendsIDs){             \n                this.dataService.getUserDialog(this.userID, i).subscribe((res) => {\n                    let friendDialog = {\n                        \"id\": i,\n                        \"dialog\": res \n                    } \n                    this.userDialogs.push(friendDialog);\n                })\n            }\n        })\n    }\n\n    checkDialog(event : any){\n        let eID = event.originalTarget.id;\n        if(eID){\n            for(let i of this.userDialogs){\n                if(i.id == eID){\n                    this.currentDialog = i.dialog;\n                    break;\n                }\n            }\n            console.log(this.currentDialog);\n        }\n        console.log(eID);\n    }\n\n    sendM\n\n    \n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAWlC,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAW3BC,YAAmBC,WAAwB,EAC/BC,aAA4B;IADrB,KAAAD,WAAW,GAAXA,WAAW;IAClB,KAAAC,aAAa,GAAbA,aAAa;IAVzB,KAAAC,QAAQ,GAAY,qBAAqB;IAEzC,KAAAC,WAAW,GAAQ,CAAC,EAAE,CAAC;IAEvB,KAAAC,aAAa,GAAS,EAAE;IACxB,KAAAC,MAAM,GAAS,IAAI,CAACJ,aAAa,CAACK,GAAG,CAAC,QAAQ,CAAC;IAE/C,KAAAC,UAAU,GAAS,CAAC,EAAE,CAAC;EAGoB;EAE3CC,QAAQA,CAAA;IACJ,IAAI,CAACR,WAAW,CAACS,cAAc,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MAC/C,IAAIC,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC;MACnC,IAAII,QAAQ,GAAGF,IAAI,CAACG,KAAK,CAACJ,SAAS,CAAC,IAAI,EAAE;MAC1C,IAAI,CAACK,YAAY,GAAGF,QAAQ;MAE5B,IAAI,CAACR,UAAU,CAACW,GAAG,EAAE;MACrB,IAAI,CAACf,WAAW,CAACe,GAAG,EAAE;MAEtB,IAAIC,UAAU,GAAGN,IAAI,CAACG,KAAK,CAACD,QAAQ,CAAC,IAAI,CAACV,MAAM,GAAC,CAAC,CAAC,CAACe,OAAO,CAAC;MAC5D,KAAI,IAAIC,CAAC,IAAIF,UAAU,EAAC;QACpB,IAAI,CAACZ,UAAU,CAACe,IAAI,CAACP,QAAQ,CAACM,CAAC,GAAC,CAAC,CAAC,CAAC;;MAGvC,KAAI,IAAIA,CAAC,IAAIF,UAAU,EAAC;QACpB,IAAI,CAACnB,WAAW,CAACuB,aAAa,CAAC,IAAI,CAAClB,MAAM,EAAEgB,CAAC,CAAC,CAACX,SAAS,CAAEC,GAAG,IAAI;UAC7D,IAAIa,YAAY,GAAG;YACf,IAAI,EAAEH,CAAC;YACP,QAAQ,EAAEV;WACb;UACD,IAAI,CAACR,WAAW,CAACmB,IAAI,CAACE,YAAY,CAAC;QACvC,CAAC,CAAC;;IAEV,CAAC,CAAC;EACN;EAEAC,WAAWA,CAACC,KAAW;IACnB,IAAIC,GAAG,GAAGD,KAAK,CAACE,cAAc,CAACC,EAAE;IACjC,IAAGF,GAAG,EAAC;MACH,KAAI,IAAIN,CAAC,IAAI,IAAI,CAAClB,WAAW,EAAC;QAC1B,IAAGkB,CAAC,CAACQ,EAAE,IAAIF,GAAG,EAAC;UACX,IAAI,CAACvB,aAAa,GAAGiB,CAAC,CAACS,MAAM;UAC7B;;;MAGRC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC5B,aAAa,CAAC;;IAEnC2B,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC;EACpB;CAOH;AA3DY7B,kBAAkB,GAAAmC,UAAA,EAP9BpC,SAAS,CAAC;EACPqC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,wBAAwB;CACvC,CAAC,C,EAGWtC,kBAAkB,CA2D9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}