{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\nimport * as i2 from \"ngx-cookie-service\";\nimport * as i3 from \"@angular/common\";\nfunction NewsComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 2)(1, \"div\", 3)(2, \"div\");\n    i0.ɵɵelement(3, \"img\", 4);\n    i0.ɵɵelementStart(4, \"p\", 5)(5, \"b\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"p\", 6);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const post_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"/assets/images/avatar/\", ctx_r0.po, \".png\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(post_r1.author);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r1.text);\n  }\n}\nexport class NewsComponent {\n  constructor(dataService, cookieService) {\n    this.dataService = dataService;\n    this.cookieService = cookieService;\n    this.userID = this.cookieService.get('userID');\n    this.lol = 0;\n    this.userPost = {\n      \"id\": 0,\n      \"author\": \"\",\n      \"text\": \"\",\n      \"user\": 0\n    };\n    this.userPostsList = [{}];\n  }\n  ngOnInit() {\n    this.dataService.getUserStorage().subscribe(res => {\n      let _userData = JSON.stringify(res);\n      let userData = JSON.parse(_userData) || [];\n      this.usersStorage = userData;\n      let countID = 1;\n      this.userPostsList.pop();\n      for (let friend of JSON.parse(userData[this.userID - 1].friends)) {\n        for (let post of JSON.parse(userData[friend - 1].post)) {\n          this.userPostsList.push({\n            \"id\": countID++,\n            \"author\": userData[friend - 1].name + \" \" + userData[friend - 1].surname,\n            \"text\": post,\n            \"user\": friend\n          });\n        }\n        countID = 1;\n      }\n      let comp = (a, b) => {\n        return b.id - a.id;\n      };\n      this.userPostsList.sort(comp);\n      this.userPostsString = JSON.stringify(this.userPostsList);\n      console.log(this.userPostsList);\n    });\n  }\n  static #_ = this.ɵfac = function NewsComponent_Factory(t) {\n    return new (t || NewsComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.CookieService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewsComponent,\n    selectors: [[\"app-news\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"news-list\"], [\"class\", \"news-list-elem\", 4, \"ngFor\", \"ngForOf\"], [1, \"news-list-elem\"], [1, \"news-list-elem-cont\"], [3, \"src\"], [1, \"news-list-elem-author\"], [1, \"news-list-elem-text\"]],\n    template: function NewsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\", 0);\n        i0.ɵɵtemplate(1, NewsComponent_li_1_Template, 9, 3, \"li\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(2, \"`\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.userPostsList);\n      }\n    },\n    dependencies: [i3.NgForOf],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵpropertyInterpolate1","ctx_r0","po","ɵɵsanitizeUrl","ɵɵtextInterpolate","post_r1","author","text","NewsComponent","constructor","dataService","cookieService","userID","get","lol","userPost","userPostsList","ngOnInit","getUserStorage","subscribe","res","_userData","JSON","stringify","userData","parse","usersStorage","countID","pop","friend","friends","post","push","name","surname","comp","a","b","id","sort","userPostsString","console","log","_","ɵɵdirectiveInject","i1","DataService","i2","CookieService","_2","selectors","decls","vars","consts","template","NewsComponent_Template","rf","ctx","ɵɵtemplate","NewsComponent_li_1_Template","ɵɵproperty"],"sources":["/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/news.component.ts","/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/news.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from './data.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n    selector: 'app-news',\n    templateUrl: 'news.component.html'\n})\n\n\nexport class NewsComponent {\n    usersStorage: any;\n    userID : any = this.cookieService.get('userID'); \n\n    lol: number = 0;\n\n    userPost = {\n                \"id\": 0,\n                \"author\": \"\",\n                \"text\": \"\",\n                \"user\": 0\n            };\n\n    public userPostsList : any = [{}];\n\n    public userPostsString : any;\n    \n    constructor(public dataService: DataService,\n        private cookieService: CookieService) {}\n\n    ngOnInit(){\n        this.dataService.getUserStorage().subscribe((res)=>{\n            let _userData = JSON.stringify(res);\n            let userData = JSON.parse(_userData) || [];\n            this.usersStorage = userData;\n\n            let countID = 1;\n            this.userPostsList.pop();\n\n            for(let friend of JSON.parse(userData[this.userID - 1].friends)){\n                for(let post of JSON.parse(userData[friend-1].post)){\n                    this.userPostsList.push({\"id\": countID++, \"author\": userData[friend - 1].name + \" \" + userData[friend - 1].surname, \"text\": post, \"user\": friend});\n                }          \n                countID = 1;\n            }\n    \n            let comp = ((a : any, b : any) => {\n                return (b.id-a.id); \n            });\n    \n            this.userPostsList.sort(comp);\n            \n            this.userPostsString = JSON.stringify(this.userPostsList);\n            console.log(this.userPostsList);\n        })\n    }\n}\n","<ul class=\"news-list\">\n    <li *ngFor=\"let post of userPostsList; let i = index\" class=\"news-list-elem\">\n        <div class=\"news-list-elem-cont\">\n            <div>\n                <img src=\"/assets/images/avatar/{{po}}.png\">\n                <p class=\"news-list-elem-author\"><b>{{post.author}}</b></p>\n            </div>\n            <p class=\"news-list-elem-text\">{{post.text}}</p>\n        </div>\n    </li>\n</ul>`"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}