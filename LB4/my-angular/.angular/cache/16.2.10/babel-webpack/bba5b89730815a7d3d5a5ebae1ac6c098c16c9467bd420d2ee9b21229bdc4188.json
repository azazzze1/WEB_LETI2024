{"ast":null,"code":"s;\nUserPost;\n{\n  id: number;\n  title: string;\n  text: string;\n  constructor(id, number, title, string, text, string);\n  {\n    this.id = id;\n    this.title = title;\n    this.text = text;\n  }\n}\nexport class NewsComponent {\n  constructor(dataService, cookieService) {\n    this.dataService = dataService;\n    this.cookieService = cookieService;\n    this.userID = this.cookieService.get('userID');\n    this.lol = 0;\n    this.userPost = new UserPost(0, \"\", \"\");\n    this.userPostsList = [];\n  }\n  ngOnInit() {\n    this.dataService.getUserStorage().subscribe(res => {\n      let _userData = JSON.stringify(res);\n      let userData = JSON.parse(_userData) || [];\n      this.usersStorage = userData;\n      let countID = 1;\n      this.userPostsList.pop();\n      for (let friend of JSON.parse(userData[this.userID - 1].friends)) {\n        for (let post of JSON.parse(userData[friend - 1].post)) {\n          this.userPostsList.push(new UserPost(countID++, userData[friend - 1].name + \" \" + userData[friend - 1].surname, post));\n        }\n        countID = 1;\n      }\n      let comp = (a, b) => {\n        return b.id - a.id;\n      };\n      this.userPostsList.sort(comp);\n      console.log(this.userPostsList);\n    });\n  }\n}","map":{"version":3,"names":["s","UserPost","id","number","title","string","text","constructor","NewsComponent","dataService","cookieService","userID","get","lol","userPost","userPostsList","ngOnInit","getUserStorage","subscribe","res","_userData","JSON","stringify","userData","parse","usersStorage","countID","pop","friend","friends","post","push","name","surname","comp","a","b","sort","console","log"],"sources":["/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/news.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from './data.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Injectable } from '@angular/core';\n\n@Component({\n    selector: 'app-news',\n    templateUrl: 'news.component.html'\n})\n\n@Injectable({providedIn: 'root'})\ns UserPost{\n    id: number;\n    title: string;\n    text: string;\n    constructor(id: number, title: string, text: string) {\n        this.id = id;\n        this.title = title;\n        this.text = text;\n    }\n}\n\nexport class NewsComponent {\n    usersStorage: any;\n    userID : any = this.cookieService.get('userID'); \n\n    lol: number = 0;\n\n    userPost = new UserPost(0,\"\",\"\");\n\n    public userPostsList : UserPost[] = [];\n    \n    constructor(public dataService: DataService,\n        private cookieService: CookieService) {}\n\n    ngOnInit(){\n        this.dataService.getUserStorage().subscribe((res)=>{\n            let _userData = JSON.stringify(res);\n            let userData = JSON.parse(_userData) || [];\n            this.usersStorage = userData;\n\n            let countID = 1;\n            this.userPostsList.pop();\n\n            for(let friend of JSON.parse(userData[this.userID - 1].friends)){\n                for(let post of JSON.parse(userData[friend-1].post)){\n                    this.userPostsList.push(new UserPost (countID++, userData[friend - 1].name + \" \" + userData[friend - 1].surname, post));\n                }          \n                countID = 1;\n            }\n    \n            let comp = ((a : any, b : any) => {\n                return (b.id-a.id); \n            });\n    \n            this.userPostsList.sort(comp);\n            \n            console.log(this.userPostsList);\n        })\n    }\n}\n"],"mappings":"AAWAA,CAAC;AAACC,QAAQ;AAAA;EACNC,EAAE,EAAEC,MAAM;EACVC,KAAK,EAAEC,MAAM;EACbC,IAAI,EAAED,MAAM;EACZE,WAAW,CAACL,EAAE,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAED,MAAM,CAAC;EAAC;IACjD,IAAI,CAACH,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACE,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACE,IAAI,GAAGA,IAAI;;;AAIxB,OAAM,MAAOE,aAAa;EAUtBD,YAAmBE,WAAwB,EAC/BC,aAA4B;IADrB,KAAAD,WAAW,GAAXA,WAAW;IAClB,KAAAC,aAAa,GAAbA,aAAa;IATzB,KAAAC,MAAM,GAAS,IAAI,CAACD,aAAa,CAACE,GAAG,CAAC,QAAQ,CAAC;IAE/C,KAAAC,GAAG,GAAW,CAAC;IAEf,KAAAC,QAAQ,GAAG,IAAIb,QAAQ,CAAC,CAAC,EAAC,EAAE,EAAC,EAAE,CAAC;IAEzB,KAAAc,aAAa,GAAgB,EAAE;EAGK;EAE3CC,QAAQA,CAAA;IACJ,IAAI,CAACP,WAAW,CAACQ,cAAc,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MAC/C,IAAIC,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC;MACnC,IAAII,QAAQ,GAAGF,IAAI,CAACG,KAAK,CAACJ,SAAS,CAAC,IAAI,EAAE;MAC1C,IAAI,CAACK,YAAY,GAAGF,QAAQ;MAE5B,IAAIG,OAAO,GAAG,CAAC;MACf,IAAI,CAACX,aAAa,CAACY,GAAG,EAAE;MAExB,KAAI,IAAIC,MAAM,IAAIP,IAAI,CAACG,KAAK,CAACD,QAAQ,CAAC,IAAI,CAACZ,MAAM,GAAG,CAAC,CAAC,CAACkB,OAAO,CAAC,EAAC;QAC5D,KAAI,IAAIC,IAAI,IAAIT,IAAI,CAACG,KAAK,CAACD,QAAQ,CAACK,MAAM,GAAC,CAAC,CAAC,CAACE,IAAI,CAAC,EAAC;UAChD,IAAI,CAACf,aAAa,CAACgB,IAAI,CAAC,IAAI9B,QAAQ,CAAEyB,OAAO,EAAE,EAAEH,QAAQ,CAACK,MAAM,GAAG,CAAC,CAAC,CAACI,IAAI,GAAG,GAAG,GAAGT,QAAQ,CAACK,MAAM,GAAG,CAAC,CAAC,CAACK,OAAO,EAAEH,IAAI,CAAC,CAAC;;QAE3HJ,OAAO,GAAG,CAAC;;MAGf,IAAIQ,IAAI,GAAIA,CAACC,CAAO,EAAEC,CAAO,KAAI;QAC7B,OAAQA,CAAC,CAAClC,EAAE,GAACiC,CAAC,CAACjC,EAAE;MACrB,CAAE;MAEF,IAAI,CAACa,aAAa,CAACsB,IAAI,CAACH,IAAI,CAAC;MAE7BI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACxB,aAAa,CAAC;IACnC,CAAC,CAAC;EACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}