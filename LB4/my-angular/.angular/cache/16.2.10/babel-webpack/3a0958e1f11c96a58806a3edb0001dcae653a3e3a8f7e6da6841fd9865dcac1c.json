{"ast":null,"code":"import * as i0 from \"@angular/core\";\nfunction FriendsComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 1)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 2);\n    i0.ɵɵelement(4, \"img\", 3);\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\");\n    i0.ɵɵtext(8, \"[admin]\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const _friend_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(_friend_r1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"/assets/images/avatar/\", _friend_r1, \".png\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r0.usersStorage[_friend_r1].surname, \" \", ctx_r0.usersStorage[_friend_r1].name, \"\");\n  }\n}\nexport class FriendsComponent {\n  constructor() {\n    this.userID = this.cookieService.get('userID');\n  }\n  static #_ = this.ɵfac = function FriendsComponent_Factory(t) {\n    return new (t || FriendsComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FriendsComponent,\n    selectors: [[\"app-friends\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[\"class\", \"lol\", 4, \"ngFor\", \"ngForOf\"], [1, \"lol\"], [2, \"background-color\", \"aqua\"], [3, \"src\"]],\n    template: function FriendsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ul\");\n        i0.ɵɵtemplate(1, FriendsComponent_li_1_Template, 9, 4, \"li\", 0);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.friendsIDs);\n      }\n    },\n    encapsulation: 2\n  });\n}\n{}\nngOnInit();\n{\n  this.dataService.getUserStorage().subscribe(res => {\n    let _userData = JSON.stringify(res);\n    let userData = JSON.parse(_userData) || [];\n    this.usersStorage = userData;\n    this.friendsIDs = JSON.parse(userData[this.userID].friends);\n    console.log(this.friendsIDs);\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","_friend_r1","ɵɵpropertyInterpolate1","ɵɵsanitizeUrl","ɵɵtextInterpolate2","ctx_r0","usersStorage","surname","name","FriendsComponent","constructor","userID","cookieService","get","_","_2","selectors","decls","vars","consts","template","FriendsComponent_Template","rf","ctx","ɵɵtemplate","FriendsComponent_li_1_Template","ɵɵproperty","friendsIDs","ngOnInit","dataService","getUserStorage","subscribe","res","_userData","JSON","stringify","userData","parse","friends","console","log"],"sources":["/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/friends.component.ts","/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/friends.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from './data.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n    selector: 'app-friends',\n    templateUrl: 'friends.component.html'\n})\n\n\nexport class FriendsComponent {\n    usersStorage: any;\n    userID : any = this.cookieService.get('userID'); \n\n    friendList: \n    \n    constructor(public dataService: DataService,\n        private cookieService: CookieService) {}\n\n    ngOnInit(){\n        this.dataService.getUserStorage().subscribe((res)=>{\n            let _userData = JSON.stringify(res);\n            let userData = JSON.parse(_userData) || [];\n            this.usersStorage = userData;\n\n            this.friendsIDs = JSON.parse(userData[this.userID].friends);\n            console.log(this.friendsIDs);\n        })\n    }\n}\n","\n<ul>\n    <li *ngFor = \"let _friend of friendsIDs; let i = index\" class=\"lol\">\n        <p>{{_friend}}</p>\n        <div style=\"background-color: aqua;\">\n            <img src = \"/assets/images/avatar/{{_friend}}.png\">\n            <span>{{usersStorage[_friend].surname}}  {{usersStorage[_friend].name}}</span>\n            <span>[admin]</span>\n        </div>\n    </li>\n</ul>  \n"],"mappings":";;;ICEIA,EAAA,CAAAC,cAAA,YAAoE;IAC7DD,EAAA,CAAAE,MAAA,GAAW;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAClBH,EAAA,CAAAC,cAAA,aAAqC;IACjCD,EAAA,CAAAI,SAAA,aAAmD;IACnDJ,EAAA,CAAAC,cAAA,WAAM;IAAAD,EAAA,CAAAE,MAAA,GAAiE;IAAAF,EAAA,CAAAG,YAAA,EAAO;IAC9EH,EAAA,CAAAC,cAAA,WAAM;IAAAD,EAAA,CAAAE,MAAA,cAAO;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAJrBH,EAAA,CAAAK,SAAA,GAAW;IAAXL,EAAA,CAAAM,iBAAA,CAAAC,UAAA,CAAW;IAELP,EAAA,CAAAK,SAAA,GAA6C;IAA7CL,EAAA,CAAAQ,sBAAA,kCAAAD,UAAA,UAAAP,EAAA,CAAAS,aAAA,CAA6C;IAC5CT,EAAA,CAAAK,SAAA,GAAiE;IAAjEL,EAAA,CAAAU,kBAAA,KAAAC,MAAA,CAAAC,YAAA,CAAAL,UAAA,EAAAM,OAAA,OAAAF,MAAA,CAAAC,YAAA,CAAAL,UAAA,EAAAO,IAAA,KAAiE;;;ADInF,OAAM,MAAOC,gBAAgB;EAN7BC,YAAA;IAQI,KAAAC,MAAM,GAAS,IAAI,CAACC,aAAa,CAACC,GAAG,CAAC,QAAQ,CAAC;;EAKN,QAAAC,CAAA,G;qBAPhCL,gBAAgB;EAAA;EAAA,QAAAM,EAAA,G;UAAhBN,gBAAgB;IAAAO,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT7B5B,EAAA,CAAAC,cAAA,SAAI;QACAD,EAAA,CAAA8B,UAAA,IAAAC,8BAAA,gBAOK;QACT/B,EAAA,CAAAG,YAAA,EAAK;;;QARyBH,EAAA,CAAAK,SAAA,GAAe;QAAfL,EAAA,CAAAgC,UAAA,YAAAH,GAAA,CAAAI,UAAA,CAAe;;;;;;ADeC;AAE1CC,QAAQ,EAAE;AAAA;EACN,IAAI,CAACC,WAAW,CAACC,cAAc,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;IAC/C,IAAIC,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC;IACnC,IAAII,QAAQ,GAAGF,IAAI,CAACG,KAAK,CAACJ,SAAS,CAAC,IAAI,EAAE;IAC1C,IAAI,CAAC3B,YAAY,GAAG8B,QAAQ;IAE5B,IAAI,CAACT,UAAU,GAAGO,IAAI,CAACG,KAAK,CAACD,QAAQ,CAAC,IAAI,CAACzB,MAAM,CAAC,CAAC2B,OAAO,CAAC;IAC3DC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,UAAU,CAAC;EAChC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}