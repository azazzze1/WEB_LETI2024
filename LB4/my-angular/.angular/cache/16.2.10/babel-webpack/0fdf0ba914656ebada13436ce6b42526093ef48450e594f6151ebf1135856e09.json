{"ast":null,"code":"import * as i0 from \"@angular/core\";\nfunction userPost_li_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _post_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(_post_r1.title);\n  }\n}\nclass userPost {\n  static #_ = this.ɵfac = function userPost_Factory(t) {\n    return new (t || userPost)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: userPost,\n    selectors: [[\"app-news\"]],\n    decls: 5,\n    vars: 2,\n    consts: [[4, \"ngFor\", \"ngForOf\"]],\n    template: function userPost_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"ul\");\n        i0.ɵɵtemplate(3, userPost_li_3_Template, 3, 1, \"li\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(4, \"`\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.userPostsList);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.userPostsList);\n      }\n    },\n    encapsulation: 2\n  });\n}\nexport class NewsComponent {\n  constructor(dataService, cookieService) {\n    this.dataService = dataService;\n    this.cookieService = cookieService;\n    this.userID = this.cookieService.get('userID');\n    this.lol = 0;\n    this.userPost = {\n      \"id\": 0,\n      \"author\": \"\",\n      \"text\": \"\"\n    };\n    this.userPostsList = [{}];\n  }\n  ngOnInit() {\n    this.dataService.getUserStorage().subscribe(res => {\n      let _userData = JSON.stringify(res);\n      let userData = JSON.parse(_userData) || [];\n      this.usersStorage = userData;\n      let countID = 1;\n      this.userPostsList.pop();\n      for (let friend of JSON.parse(userData[this.userID - 1].friends)) {\n        for (let post of JSON.parse(userData[friend - 1].post)) {\n          this.userPostsList.push({\n            \"id\": countID++,\n            \"author\": userData[friend - 1].name + \" \" + userData[friend - 1].surname,\n            \"text\": post\n          });\n        }\n        countID = 1;\n      }\n      let comp = (a, b) => {\n        return b.id - a.id;\n      };\n      this.userPostsList.sort(comp);\n      this.userPostsString = JSON.stringify(this.userPostsList);\n      console.log(this.userPostsList);\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","_post_r1","title","userPost","_","_2","selectors","decls","vars","consts","template","userPost_Template","rf","ctx","ɵɵtemplate","userPost_li_3_Template","userPostsList","ɵɵproperty","NewsComponent","constructor","dataService","cookieService","userID","get","lol","ngOnInit","getUserStorage","subscribe","res","_userData","JSON","stringify","userData","parse","usersStorage","countID","pop","friend","friends","post","push","name","surname","comp","a","b","id","sort","userPostsString","console","log"],"sources":["/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/news.component.ts","/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/news.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from './data.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n    selector: 'app-news',\n    templateUrl: 'news.component.html'\n})\n\nclass userPost{\n        \n}\n\nexport class NewsComponent {\n    usersStorage: any;\n    userID : any = this.cookieService.get('userID'); \n\n    lol: number = 0;\n\n    userPost = {\n                \"id\": 0,\n                \"author\": \"\",\n                \"text\": \"\"\n            };\n\n    public userPostsList : userPost = [{}];\n\n    public userPostsString : any;\n    \n    constructor(public dataService: DataService,\n        private cookieService: CookieService) {}\n\n    ngOnInit(){\n        this.dataService.getUserStorage().subscribe((res)=>{\n            let _userData = JSON.stringify(res);\n            let userData = JSON.parse(_userData) || [];\n            this.usersStorage = userData;\n\n            let countID = 1;\n            this.userPostsList.pop();\n\n            for(let friend of JSON.parse(userData[this.userID - 1].friends)){\n                for(let post of JSON.parse(userData[friend-1].post)){\n                    this.userPostsList.push({\"id\": countID++, \"author\": userData[friend - 1].name + \" \" + userData[friend - 1].surname, \"text\": post});\n                }          \n                countID = 1;\n            }\n    \n            let comp = ((a : any, b : any) => {\n                return (b.id-a.id); \n            });\n    \n            this.userPostsList.sort(comp);\n            \n            this.userPostsString = JSON.stringify(this.userPostsList);\n            console.log(this.userPostsList);\n        })\n    }\n}\n","<p>{{userPostsList}}</p>\n<ul>\n    <li *ngFor=\"let _post of userPostsList; let i = index\">\n        <p>{{_post.title}}</p>\n    </li>\n</ul>`"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}