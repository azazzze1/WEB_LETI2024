{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\nimport * as i2 from \"ngx-cookie-service\";\nexport class NewsComponent {\n  constructor(dataService, cookieService) {\n    this.dataService = dataService;\n    this.cookieService = cookieService;\n    this.userID = this.cookieService.get('userID');\n    this.userPostsList = [];\n  }\n  ngOnInit() {\n    this.dataService.getUserStorage().subscribe(res => {\n      let _userData = JSON.stringify(res);\n      let userData = JSON.parse(_userData) || [];\n      this.usersStorage = userData;\n      let userPost = {\n        \"id\": 0,\n        \"author\": \"\",\n        \"text\": \"\"\n      };\n      let countID = 1;\n      for (let friend of JSON.parse(userData[this.userID - 1].friends)) {\n        for (let post of JSON.parse(userData[friend - 1].post)) {\n          userPost.id = countID++;\n          userPost.author = userData[friend - 1].name + \" \" + userData[friend - 1].surname;\n          userPost.text = post;\n          console.log;\n          this.userPostsList.push(userPost);\n        }\n        countID = 1;\n      }\n      // let comp = ((a : any, b : any) => {\n      //     return (b.id-a.id); \n      // });\n      // this.userPostsList.sort(comp);\n      console.log(this.userPostsList);\n    });\n  }\n  static #_ = this.ɵfac = function NewsComponent_Factory(t) {\n    return new (t || NewsComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.CookieService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewsComponent,\n    selectors: [[\"app-news\"]],\n    decls: 1,\n    vars: 0,\n    template: function NewsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\");\n      }\n    },\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["NewsComponent","constructor","dataService","cookieService","userID","get","userPostsList","ngOnInit","getUserStorage","subscribe","res","_userData","JSON","stringify","userData","parse","usersStorage","userPost","countID","friend","friends","post","id","author","name","surname","text","console","log","push","_","i0","ɵɵdirectiveInject","i1","DataService","i2","CookieService","_2","selectors","decls","vars","template","NewsComponent_Template","rf","ctx","ɵɵelement"],"sources":["/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/news.component.ts","/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/news.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from './data.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { count } from 'rxjs';\n\n@Component({\n    selector: 'app-news',\n    templateUrl: 'news.component.html'\n})\n\nexport class NewsComponent {\n    usersStorage: any;\n    userID : any = this.cookieService.get('userID'); \n    userPostsList : any = [];\n\n    constructor(public dataService: DataService,\n        private cookieService: CookieService) {}\n\n    ngOnInit(){\n        this.dataService.getUserStorage().subscribe((res)=>{\n            let _userData = JSON.stringify(res);\n            let userData = JSON.parse(_userData) || [];\n            this.usersStorage = userData;\n\n            let userPost = {\n                \"id\": 0,\n                \"author\": \"\",\n                \"text\": \"\"\n            }\n    \n            let countID = 1;\n    \n\n            for(let friend of JSON.parse(userData[this.userID - 1].friends)){\n                for(let post of JSON.parse(userData[friend-1].post)){\n                    userPost.id = countID++;\n                    userPost.author = userData[friend - 1].name + \" \" + userData[friend - 1].surname;\n                    userPost.text = post;\n                    console.log\n                    this.userPostsList.push(userPost);\n                }          \n                countID = 1;\n            }\n    \n            // let comp = ((a : any, b : any) => {\n            //     return (b.id-a.id); \n            // });\n    \n            // this.userPostsList.sort(comp);\n    \n            console.log(this.userPostsList);\n        })\n    }\n}\n\n// user -> user.friend -> user.friend.post","<div>\n    \n</div>"],"mappings":";;;AAUA,OAAM,MAAOA,aAAa;EAKtBC,YAAmBC,WAAwB,EAC/BC,aAA4B;IADrB,KAAAD,WAAW,GAAXA,WAAW;IAClB,KAAAC,aAAa,GAAbA,aAAa;IAJzB,KAAAC,MAAM,GAAS,IAAI,CAACD,aAAa,CAACE,GAAG,CAAC,QAAQ,CAAC;IAC/C,KAAAC,aAAa,GAAS,EAAE;EAGmB;EAE3CC,QAAQA,CAAA;IACJ,IAAI,CAACL,WAAW,CAACM,cAAc,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MAC/C,IAAIC,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC;MACnC,IAAII,QAAQ,GAAGF,IAAI,CAACG,KAAK,CAACJ,SAAS,CAAC,IAAI,EAAE;MAC1C,IAAI,CAACK,YAAY,GAAGF,QAAQ;MAE5B,IAAIG,QAAQ,GAAG;QACX,IAAI,EAAE,CAAC;QACP,QAAQ,EAAE,EAAE;QACZ,MAAM,EAAE;OACX;MAED,IAAIC,OAAO,GAAG,CAAC;MAGf,KAAI,IAAIC,MAAM,IAAIP,IAAI,CAACG,KAAK,CAACD,QAAQ,CAAC,IAAI,CAACV,MAAM,GAAG,CAAC,CAAC,CAACgB,OAAO,CAAC,EAAC;QAC5D,KAAI,IAAIC,IAAI,IAAIT,IAAI,CAACG,KAAK,CAACD,QAAQ,CAACK,MAAM,GAAC,CAAC,CAAC,CAACE,IAAI,CAAC,EAAC;UAChDJ,QAAQ,CAACK,EAAE,GAAGJ,OAAO,EAAE;UACvBD,QAAQ,CAACM,MAAM,GAAGT,QAAQ,CAACK,MAAM,GAAG,CAAC,CAAC,CAACK,IAAI,GAAG,GAAG,GAAGV,QAAQ,CAACK,MAAM,GAAG,CAAC,CAAC,CAACM,OAAO;UAChFR,QAAQ,CAACS,IAAI,GAAGL,IAAI;UACpBM,OAAO,CAACC,GAAG;UACX,IAAI,CAACtB,aAAa,CAACuB,IAAI,CAACZ,QAAQ,CAAC;;QAErCC,OAAO,GAAG,CAAC;;MAGf;MACA;MACA;MAEA;MAEAS,OAAO,CAACC,GAAG,CAAC,IAAI,CAACtB,aAAa,CAAC;IACnC,CAAC,CAAC;EACN;EAAC,QAAAwB,CAAA,G;qBA1CQ9B,aAAa,EAAA+B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbrC,aAAa;IAAAsC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV1BZ,EAAA,CAAAc,SAAA,UAEM"},"metadata":{},"sourceType":"module","externalDependencies":[]}