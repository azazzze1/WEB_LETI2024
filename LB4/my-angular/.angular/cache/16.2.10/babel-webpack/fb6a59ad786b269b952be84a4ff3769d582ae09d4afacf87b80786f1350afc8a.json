{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\nimport * as i2 from \"ngx-cookie-service\";\nexport class FriendsComponent {\n  constructor(dataService, cookieService) {\n    this.dataService = dataService;\n    this.cookieService = cookieService;\n    this.userID = this.cookieService.get('userID');\n  }\n  ngOnInit() {\n    this.dataService.getUserStorage().subscribe(res => {\n      let _userData = JSON.stringify(res);\n      let userData = JSON.parse(_userData) || [];\n      this.usersStorage = userData;\n    });\n  }\n  static #_ = this.ɵfac = function FriendsComponent_Factory(t) {\n    return new (t || FriendsComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.CookieService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FriendsComponent,\n    selectors: [[\"app-friends\"]],\n    decls: 38,\n    vars: 0,\n    consts: [[\"src\", \"../public/images/avatars/1.jpg\", 1, \"user-avatar\"], [\"href\", \"/usersList/friends/1\", 1, \"user-list-ref\"], [\"href\", \"/usersList/posts/1\", 1, \"user-list-ref\"], [\"onclick\", \"window.updateUser1.showModal()\"], [1, \"fa-solid\", \"fa-pen-to-square\"], [\"id\", \"updateUser1\"], [\"action\", \"updateUser1\", \"method\", \"post\", 1, \"update-user-form\"], [\"for\", \"name\"], [\"type\", \"text\", \"name\", \"name\", \"required\", \"\", \"value\", \"\\u0415\\u0433\\u043E\\u0440\", 1, \"inputLabel\"], [\"for\", \"surname\"], [\"type\", \"text\", \"name\", \"surname\", \"required\", \"\", \"value\", \"\\u0428\\u0443\\u0448\\u043A\\u043E\\u0432\", 1, \"inputLabel\"], [\"for\", \"patronymic\"], [\"type\", \"text\", \"name\", \"patronymic\", \"required\", \"\", \"value\", \"\\u0412\\u0430\\u0441\\u0438\\u043B\\u044C\\u0435\\u0432\\u0438\\u0447\", 1, \"inputLabel\"], [\"for\", \"birthdate\"], [\"type\", \"date\", \"name\", \"birthdate\", \"required\", \"\", \"value\", \"2004-04-08\", 1, \"inputLabel\"], [\"for\", \"admin\"], [\"type\", \"checkbox\", \"name\", \"admin\", \"checked\", \"\", 1, \"inputLabel\"], [\"name\", \"user\", \"type\", \"submit\", \"value\", \"1\", 1, \"fa-solid\", \"fa-check\", \"menu-button\"], [\"type\", \"button\", \"onclick\", \"window.updateUser1.close()\", 1, \"fa-solid\", \"fa-xmark\", \"menu-button\"]],\n    template: function FriendsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"img\", 0);\n        i0.ɵɵelementStart(1, \"span\");\n        i0.ɵɵtext(2, \" \\u0428\\u0443\\u0448\\u043A\\u043E\\u0432 \\u0415\\u0433\\u043E\\u0440 \\u0412\\u0430\\u0441\\u0438\\u043B\\u044C\\u0435\\u0432\\u0438\\u0447 (2004-04-08)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"span\");\n        i0.ɵɵtext(4, \"[admin]\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"a\", 1);\n        i0.ɵɵtext(6, \"\\u0434\\u0440\\u0443\\u0437\\u044C\\u044F\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"a\", 2);\n        i0.ɵɵtext(8, \"\\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0438\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 3)(10, \"p\", 4);\n        i0.ɵɵtext(11, \" \\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"dialog\", 5)(13, \"form\", 6)(14, \"label\", 7)(15, \"p\");\n        i0.ɵɵtext(16, \"\\u0418\\u043C\\u044F: \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(17, \"input\", 8);\n        i0.ɵɵelementStart(18, \"label\", 9)(19, \"p\");\n        i0.ɵɵtext(20, \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F: \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(21, \"input\", 10);\n        i0.ɵɵelementStart(22, \"label\", 11)(23, \"p\");\n        i0.ɵɵtext(24, \"\\u041E\\u0442\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E: \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(25, \"input\", 12);\n        i0.ɵɵelementStart(26, \"label\", 13)(27, \"p\");\n        i0.ɵɵtext(28, \"\\u0414\\u0430\\u0442\\u0430 \\u0440\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F: \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(29, \"input\", 14)(30, \"br\");\n        i0.ɵɵelementStart(31, \"label\", 15)(32, \"span\");\n        i0.ɵɵtext(33, \"\\u041F\\u0440\\u0430\\u0432\\u0430 \\u0430\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u043E\\u0440\\u0430: \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(34, \"input\", 16)(35, \"br\")(36, \"button\", 17)(37, \"button\", 18);\n        i0.ɵɵelementEnd()();\n      }\n    },\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["FriendsComponent","constructor","dataService","cookieService","userID","get","ngOnInit","getUserStorage","subscribe","res","_userData","JSON","stringify","userData","parse","usersStorage","_","i0","ɵɵdirectiveInject","i1","DataService","i2","CookieService","_2","selectors","decls","vars","consts","template","FriendsComponent_Template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/friends.component.ts","/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/friends.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from './data.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n    selector: 'app-friends',\n    templateUrl: 'friends.component.html'\n})\n\n\nexport class FriendsComponent {\n    usersStorage: any;\n    userID : any = this.cookieService.get('userID'); \n    \n    constructor(public dataService: DataService,\n        private cookieService: CookieService) {}\n\n    ngOnInit(){\n        this.dataService.getUserStorage().subscribe((res)=>{\n            let _userData = JSON.stringify(res);\n            let userData = JSON.parse(_userData) || [];\n            this.usersStorage = userData;\n        })\n    }\n}\n","<img class=\"user-avatar\" src=\"../public/images/avatars/1.jpg\">\n<span> Шушков Егор Васильевич (2004-04-08)</span>\n<span>[admin]</span>\n<a class=\"user-list-ref\" href=\"/usersList/friends/1\">друзья</a>\n<a class=\"user-list-ref\" href=\"/usersList/posts/1\">новости</a><button onclick=\"window.updateUser1.showModal()\"><p class=\"fa-solid fa-pen-to-square\"> Изменить данные</p></button><dialog id=\"updateUser1\"> <form class=\"update-user-form\" action=\"updateUser1\" method=\"post\"><label for=\"name\"><p>Имя: </p></label><input class=\"inputLabel\" type=\"text\" name=\"name\" required=\"\" value=\"Егор\"><label for=\"surname\"><p>Фамилия: </p></label><input class=\"inputLabel\" type=\"text\" name=\"surname\" required=\"\" value=\"Шушков\"><label for=\"patronymic\"><p>Отчество: </p></label><input class=\"inputLabel\" type=\"text\" name=\"patronymic\" required=\"\" value=\"Васильевич\"><label for=\"birthdate\"><p>Дата рождения: </p></label><input class=\"inputLabel\" type=\"date\" name=\"birthdate\" required=\"\" value=\"2004-04-08\"><br><label for=\"admin\"><span>Права администратора: </span></label><input class=\"inputLabel\" type=\"checkbox\" name=\"admin\" checked=\"\"><br><button class=\"fa-solid fa-check menu-button\" name=\"user\" type=\"submit\" value=\"1\"></button><button class=\"fa-solid fa-xmark menu-button\" type=\"button\" onclick=\"window.updateUser1.close()\"></button></form></dialog>"],"mappings":";;;AAUA,OAAM,MAAOA,gBAAgB;EAIzBC,YAAmBC,WAAwB,EAC/BC,aAA4B;IADrB,KAAAD,WAAW,GAAXA,WAAW;IAClB,KAAAC,aAAa,GAAbA,aAAa;IAHzB,KAAAC,MAAM,GAAS,IAAI,CAACD,aAAa,CAACE,GAAG,CAAC,QAAQ,CAAC;EAGJ;EAE3CC,QAAQA,CAAA;IACJ,IAAI,CAACJ,WAAW,CAACK,cAAc,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MAC/C,IAAIC,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC;MACnC,IAAII,QAAQ,GAAGF,IAAI,CAACG,KAAK,CAACJ,SAAS,CAAC,IAAI,EAAE;MAC1C,IAAI,CAACK,YAAY,GAAGF,QAAQ;IAChC,CAAC,CAAC;EACN;EAAC,QAAAG,CAAA,G;qBAbQhB,gBAAgB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAhBvB,gBAAgB;IAAAwB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV7Bb,EAAA,CAAAe,SAAA,aAA8D;QAC9Df,EAAA,CAAAgB,cAAA,WAAM;QAAChB,EAAA,CAAAiB,MAAA,+IAAmC;QAAAjB,EAAA,CAAAkB,YAAA,EAAO;QACjDlB,EAAA,CAAAgB,cAAA,WAAM;QAAAhB,EAAA,CAAAiB,MAAA,cAAO;QAAAjB,EAAA,CAAAkB,YAAA,EAAO;QACpBlB,EAAA,CAAAgB,cAAA,WAAqD;QAAAhB,EAAA,CAAAiB,MAAA,2CAAM;QAAAjB,EAAA,CAAAkB,YAAA,EAAI;QAC/DlB,EAAA,CAAAgB,cAAA,WAAmD;QAAAhB,EAAA,CAAAiB,MAAA,iDAAO;QAAAjB,EAAA,CAAAkB,YAAA,EAAI;QAAAlB,EAAA,CAAAgB,cAAA,gBAAiD;QAAsChB,EAAA,CAAAiB,MAAA,8FAAe;QAAAjB,EAAA,CAAAkB,YAAA,EAAI;QAASlB,EAAA,CAAAgB,cAAA,iBAAyB;QAAwFhB,EAAA,CAAAiB,MAAA,4BAAK;QAAAjB,EAAA,CAAAkB,YAAA,EAAI;QAAQlB,EAAA,CAAAe,SAAA,gBAA2E;QAAAf,EAAA,CAAAgB,cAAA,gBAAqB;QAAGhB,EAAA,CAAAiB,MAAA,oDAAS;QAAAjB,EAAA,CAAAkB,YAAA,EAAI;QAAQlB,EAAA,CAAAe,SAAA,iBAAgF;QAAAf,EAAA,CAAAgB,cAAA,iBAAwB;QAAGhB,EAAA,CAAAiB,MAAA,0DAAU;QAAAjB,EAAA,CAAAkB,YAAA,EAAI;QAAQlB,EAAA,CAAAe,SAAA,iBAAuF;QAAAf,EAAA,CAAAgB,cAAA,iBAAuB;QAAGhB,EAAA,CAAAiB,MAAA,mFAAe;QAAAjB,EAAA,CAAAkB,YAAA,EAAI;QAAQlB,EAAA,CAAAe,SAAA,iBAAsF;QAAIf,EAAA,CAAAgB,cAAA,iBAAmB;QAAMhB,EAAA,CAAAiB,MAAA,6HAAsB;QAAAjB,EAAA,CAAAkB,YAAA,EAAO;QAAQlB,EAAA,CAAAe,SAAA,iBAAkE;QAAyMf,EAAA,CAAAkB,YAAA,EAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}