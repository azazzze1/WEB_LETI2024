{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet userPost = class userPost {\n  constructor(id) {\n    this.name = userName;\n  }\n};\nuserPost = __decorate([Component({\n  selector: 'app-news',\n  templateUrl: 'news.component.html'\n})], userPost);\nexport class NewsComponent {\n  constructor(dataService, cookieService) {\n    this.dataService = dataService;\n    this.cookieService = cookieService;\n    this.userID = this.cookieService.get('userID');\n    this.lol = 0;\n    this.userPost = {\n      \"id\": 0,\n      \"author\": \"\",\n      \"text\": \"\"\n    };\n    this.userPostsList = [{}];\n  }\n  ngOnInit() {\n    this.dataService.getUserStorage().subscribe(res => {\n      let _userData = JSON.stringify(res);\n      let userData = JSON.parse(_userData) || [];\n      this.usersStorage = userData;\n      let countID = 1;\n      this.userPostsList.pop();\n      for (let friend of JSON.parse(userData[this.userID - 1].friends)) {\n        for (let post of JSON.parse(userData[friend - 1].post)) {\n          this.userPostsList.push({\n            \"id\": countID++,\n            \"author\": userData[friend - 1].name + \" \" + userData[friend - 1].surname,\n            \"text\": post\n          });\n        }\n        countID = 1;\n      }\n      let comp = (a, b) => {\n        return b.id - a.id;\n      };\n      this.userPostsList.sort(comp);\n      this.userPostsString = JSON.stringify(this.userPostsList);\n      console.log(this.userPostsList);\n    });\n  }\n}","map":{"version":3,"names":["Component","userPost","constructor","id","name","userName","__decorate","selector","templateUrl","NewsComponent","dataService","cookieService","userID","get","lol","userPostsList","ngOnInit","getUserStorage","subscribe","res","_userData","JSON","stringify","userData","parse","usersStorage","countID","pop","friend","friends","post","push","surname","comp","a","b","sort","userPostsString","console","log"],"sources":["/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/news.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from './data.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n    selector: 'app-news',\n    templateUrl: 'news.component.html'\n})\n\nclass userPost{\n    id: number;\n    \n    constructor(id: string, ) {\n        this.name = userName;\n    }\n}\n\nexport class NewsComponent {\n    usersStorage: any;\n    userID : any = this.cookieService.get('userID'); \n\n    lol: number = 0;\n\n    userPost = {\n                \"id\": 0,\n                \"author\": \"\",\n                \"text\": \"\"\n            };\n\n    public userPostsList : userPost = [{}];\n\n    public userPostsString : any;\n    \n    constructor(public dataService: DataService,\n        private cookieService: CookieService) {}\n\n    ngOnInit(){\n        this.dataService.getUserStorage().subscribe((res)=>{\n            let _userData = JSON.stringify(res);\n            let userData = JSON.parse(_userData) || [];\n            this.usersStorage = userData;\n\n            let countID = 1;\n            this.userPostsList.pop();\n\n            for(let friend of JSON.parse(userData[this.userID - 1].friends)){\n                for(let post of JSON.parse(userData[friend-1].post)){\n                    this.userPostsList.push({\"id\": countID++, \"author\": userData[friend - 1].name + \" \" + userData[friend - 1].surname, \"text\": post});\n                }          \n                countID = 1;\n            }\n    \n            let comp = ((a : any, b : any) => {\n                return (b.id-a.id); \n            });\n    \n            this.userPostsList.sort(comp);\n            \n            this.userPostsString = JSON.stringify(this.userPostsList);\n            console.log(this.userPostsList);\n        })\n    }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASzC,IAAMC,QAAQ,GAAd,MAAMA,QAAQ;EAGVC,YAAYC,EAAU;IAClB,IAAI,CAACC,IAAI,GAAGC,QAAQ;EACxB;CACH;AANKJ,QAAQ,GAAAK,UAAA,EALbN,SAAS,CAAC;EACPO,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE;CAChB,CAAC,C,EAEIP,QAAQ,CAMb;AAED,OAAM,MAAOQ,aAAa;EAgBtBP,YAAmBQ,WAAwB,EAC/BC,aAA4B;IADrB,KAAAD,WAAW,GAAXA,WAAW;IAClB,KAAAC,aAAa,GAAbA,aAAa;IAfzB,KAAAC,MAAM,GAAS,IAAI,CAACD,aAAa,CAACE,GAAG,CAAC,QAAQ,CAAC;IAE/C,KAAAC,GAAG,GAAW,CAAC;IAEf,KAAAb,QAAQ,GAAG;MACC,IAAI,EAAE,CAAC;MACP,QAAQ,EAAE,EAAE;MACZ,MAAM,EAAE;KACX;IAEF,KAAAc,aAAa,GAAc,CAAC,EAAE,CAAC;EAKK;EAE3CC,QAAQA,CAAA;IACJ,IAAI,CAACN,WAAW,CAACO,cAAc,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MAC/C,IAAIC,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC;MACnC,IAAII,QAAQ,GAAGF,IAAI,CAACG,KAAK,CAACJ,SAAS,CAAC,IAAI,EAAE;MAC1C,IAAI,CAACK,YAAY,GAAGF,QAAQ;MAE5B,IAAIG,OAAO,GAAG,CAAC;MACf,IAAI,CAACX,aAAa,CAACY,GAAG,EAAE;MAExB,KAAI,IAAIC,MAAM,IAAIP,IAAI,CAACG,KAAK,CAACD,QAAQ,CAAC,IAAI,CAACX,MAAM,GAAG,CAAC,CAAC,CAACiB,OAAO,CAAC,EAAC;QAC5D,KAAI,IAAIC,IAAI,IAAIT,IAAI,CAACG,KAAK,CAACD,QAAQ,CAACK,MAAM,GAAC,CAAC,CAAC,CAACE,IAAI,CAAC,EAAC;UAChD,IAAI,CAACf,aAAa,CAACgB,IAAI,CAAC;YAAC,IAAI,EAAEL,OAAO,EAAE;YAAE,QAAQ,EAAEH,QAAQ,CAACK,MAAM,GAAG,CAAC,CAAC,CAACxB,IAAI,GAAG,GAAG,GAAGmB,QAAQ,CAACK,MAAM,GAAG,CAAC,CAAC,CAACI,OAAO;YAAE,MAAM,EAAEF;UAAI,CAAC,CAAC;;QAEtIJ,OAAO,GAAG,CAAC;;MAGf,IAAIO,IAAI,GAAIA,CAACC,CAAO,EAAEC,CAAO,KAAI;QAC7B,OAAQA,CAAC,CAAChC,EAAE,GAAC+B,CAAC,CAAC/B,EAAE;MACrB,CAAE;MAEF,IAAI,CAACY,aAAa,CAACqB,IAAI,CAACH,IAAI,CAAC;MAE7B,IAAI,CAACI,eAAe,GAAGhB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACP,aAAa,CAAC;MACzDuB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACxB,aAAa,CAAC;IACnC,CAAC,CAAC;EACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}