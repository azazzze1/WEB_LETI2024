{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\nimport * as i2 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(dataService) {\n    this.dataService = dataService;\n    this.loginEmail = \"\";\n    this.password = \"\";\n    this.comment = \"\";\n  }\n  ngOnInit() {\n    this.dataService.getUserStorage().subscribe(res => {\n      let _userData = JSON.stringify(res);\n      let userData = JSON.parse(_userData) || [];\n      this.usersStorage = userData;\n    });\n  }\n  searchUser() {\n    let userData = this.usersStorage;\n    this.dataService.usersStorage = userData;\n    for (let i = 0; i < userData.length; ++i) {\n      if (userData[i].email == this.loginEmail && userData[i].password == this.password) {\n        this.dataService.curUserID.next(i + 1);\n        this.dataService.curUserFullName.next(userData[i].surname + \" \" + userData[i].name);\n        this.comment = \"Вход выполнен!\";\n        location.href = \"/\";\n        return;\n      }\n    }\n    this.comment = \"Неверный пароль или логин!\";\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 14,\n    vars: 3,\n    consts: [[3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n        i0.ɵɵtext(2, \"\\u041B\\u043E\\u0433\\u0438\\u043D:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.loginEmail = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\");\n        i0.ɵɵtext(5, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\")(8, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_8_listener() {\n          return ctx.searchUser();\n        });\n        i0.ɵɵtext(9, \"\\u041D\\u0430\\u0436\\u043C\\u0438 \\u043C\\u0435\\u043D\\u044F\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_10_listener() {\n          return ctx.dataService.checkParams();\n        });\n        i0.ɵɵtext(11, \"\\u041F\\u0430\\u0440\\u0430\\u043C\\u0435\\u0442\\u0440\\u044B\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"p\");\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.loginEmail);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate(ctx.comment);\n      }\n    },\n    dependencies: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["LoginComponent","constructor","dataService","loginEmail","password","comment","ngOnInit","getUserStorage","subscribe","res","_userData","JSON","stringify","userData","parse","usersStorage","searchUser","i","length","email","curUserID","next","curUserFullName","surname","name","location","href","_","i0","ɵɵdirectiveInject","i1","DataService","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_input_ngModelChange_3_listener","$event","LoginComponent_Template_input_ngModelChange_6_listener","LoginComponent_Template_button_click_8_listener","LoginComponent_Template_button_click_10_listener","checkParams","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate"],"sources":["/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/login.component.ts","/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from './data.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: 'login.component.html'\n})\n\nexport class LoginComponent {\n    loginEmail: string = \"\";\n    password: string = \"\";  \n    comment: string = \"\"; \n\n    usersStorage: any;\n\n    constructor(public dataService: DataService) {}\n\n    ngOnInit(){\n        this.dataService.getUserStorage().subscribe((res)=>{\n            let _userData = JSON.stringify(res);\n            let userData = JSON.parse(_userData) || [];\n            this.usersStorage = userData;\n        })\n    }\n\n    searchUser(){\n        let userData = this.usersStorage;\n        this.dataService.usersStorage = userData;\n        \n\n\n        for(let i = 0; i < userData.length; ++i){\n            if(userData[i].email == this.loginEmail && userData[i].password == this.password){\n                this.dataService.curUserID.next(i+1);\n                this.dataService.curUserFullName.next(userData[i].surname + \" \" + userData[i].name);\n                this.comment = \"Вход выполнен!\";\n                location.href=\"/\"\n                return;\n            }\n        }\n\n        this.comment = \"Неверный пароль или логин!\";\n    }\n\n}","<div>\n    <p>Логин:</p>\n    <input [(ngModel)]=\"loginEmail\">\n    <p>Пароль:</p>\n    <input [(ngModel)]=\"password\">\n<div>\n<button (click)=\"searchUser()\">Нажми меня</button>\n<button (click)=\"this.dataService.checkParams()\">Параметры</button>\n<p>{{comment}}</p>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}