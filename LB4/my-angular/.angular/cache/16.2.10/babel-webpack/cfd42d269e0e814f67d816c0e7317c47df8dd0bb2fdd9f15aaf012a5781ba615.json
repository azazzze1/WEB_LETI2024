{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\nimport * as i2 from \"ngx-cookie-service\";\nexport class NewsComponent {\n  constructor(dataService, cookieService) {\n    this.dataService = dataService;\n    this.cookieService = cookieService;\n    this.usersStorage = {};\n    this.userID = this.cookieService.get('userID');\n    this.userPost = {\n      \"id\": 0,\n      \"author\": \"\",\n      \"text\": \"\"\n    };\n    this.userPostsList = [this.userPost];\n  }\n  ngOnInit() {\n    this.dataService.getUserStorage().subscribe(res => {\n      let _userData = JSON.stringify(res);\n      let userData = JSON.parse(_userData) || [];\n      this.usersStorage = userData;\n      let countID = 1;\n      let startUsersPost = [{}];\n      for (let friend of JSON.parse(userData[this.userID - 1].friends)) {\n        for (let post of JSON.parse(userData[friend - 1].post)) {\n          this.userPostsList.push({\n            \"id\": countID++,\n            \"author\": userData[friend - 1].name + \" \" + userData[friend - 1].surname,\n            \"text\": post\n          });\n        }\n        countID = 1;\n      }\n      let comp = (a, b) => {\n        return b.id - a.id;\n      };\n      this.userPostsList.sort(comp);\n      console.log(this.userPostsList);\n    });\n  }\n  static #_ = this.ɵfac = function NewsComponent_Factory(t) {\n    return new (t || NewsComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.CookieService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewsComponent,\n    selectors: [[\"app-news\"]],\n    decls: 1,\n    vars: 0,\n    template: function NewsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\");\n      }\n    },\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["NewsComponent","constructor","dataService","cookieService","usersStorage","userID","get","userPost","userPostsList","ngOnInit","getUserStorage","subscribe","res","_userData","JSON","stringify","userData","parse","countID","startUsersPost","friend","friends","post","push","name","surname","comp","a","b","id","sort","console","log","_","i0","ɵɵdirectiveInject","i1","DataService","i2","CookieService","_2","selectors","decls","vars","template","NewsComponent_Template","rf","ctx","ɵɵelement"],"sources":["/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/news.component.ts","/home/azazzzel/LETI2024/WEB/LB4/my-angular/src/app/news.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from './data.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { count } from 'rxjs';\n\n@Component({\n    selector: 'app-news',\n    templateUrl: 'news.component.html'\n})\n\nexport class NewsComponent {\n    usersStorage = {};\n    userID : any = this.cookieService.get('userID'); \n\n    userPost = {\n                \"id\": 0,\n                \"author\": \"\",\n                \"text\": \"\"\n            };\n\n    userPostsList = [this.userPost];\n    \n\n    constructor(public dataService: DataService,\n        private cookieService: CookieService) {}\n\n    ngOnInit(){\n        this.dataService.getUserStorage().subscribe((res)=>{\n            let _userData = JSON.stringify(res);\n            let userData = JSON.parse(_userData) || [];\n            this.usersStorage = userData;\n\n            let countID = 1;\n            let startUsersPost = [{}];    \n\n            for(let friend of JSON.parse(userData[this.userID - 1].friends)){\n                for(let post of JSON.parse(userData[friend-1].post)){\n                    this.userPostsList.push({\"id\": countID++, \"author\": userData[friend - 1].name + \" \" + userData[friend - 1].surname, \"text\": post});\n                }          \n                countID = 1;\n            }\n    \n            let comp = ((a : any, b : any) => {\n                return (b.id-a.id); \n            });\n    \n            this.userPostsList.sort(comp);\n    \n            console.log(this.userPostsList);\n        })\n    }\n}\n\n// user -> user.friend -> user.friend.post","<div>\n    \n</div>"],"mappings":";;;AAUA,OAAM,MAAOA,aAAa;EAatBC,YAAmBC,WAAwB,EAC/BC,aAA4B;IADrB,KAAAD,WAAW,GAAXA,WAAW;IAClB,KAAAC,aAAa,GAAbA,aAAa;IAbzB,KAAAC,YAAY,GAAG,EAAE;IACjB,KAAAC,MAAM,GAAS,IAAI,CAACF,aAAa,CAACG,GAAG,CAAC,QAAQ,CAAC;IAE/C,KAAAC,QAAQ,GAAG;MACC,IAAI,EAAE,CAAC;MACP,QAAQ,EAAE,EAAE;MACZ,MAAM,EAAE;KACX;IAET,KAAAC,aAAa,GAAG,CAAC,IAAI,CAACD,QAAQ,CAAC;EAIY;EAE3CE,QAAQA,CAAA;IACJ,IAAI,CAACP,WAAW,CAACQ,cAAc,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MAC/C,IAAIC,SAAS,GAAGC,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC;MACnC,IAAII,QAAQ,GAAGF,IAAI,CAACG,KAAK,CAACJ,SAAS,CAAC,IAAI,EAAE;MAC1C,IAAI,CAACT,YAAY,GAAGY,QAAQ;MAE5B,IAAIE,OAAO,GAAG,CAAC;MACf,IAAIC,cAAc,GAAG,CAAC,EAAE,CAAC;MAEzB,KAAI,IAAIC,MAAM,IAAIN,IAAI,CAACG,KAAK,CAACD,QAAQ,CAAC,IAAI,CAACX,MAAM,GAAG,CAAC,CAAC,CAACgB,OAAO,CAAC,EAAC;QAC5D,KAAI,IAAIC,IAAI,IAAIR,IAAI,CAACG,KAAK,CAACD,QAAQ,CAACI,MAAM,GAAC,CAAC,CAAC,CAACE,IAAI,CAAC,EAAC;UAChD,IAAI,CAACd,aAAa,CAACe,IAAI,CAAC;YAAC,IAAI,EAAEL,OAAO,EAAE;YAAE,QAAQ,EAAEF,QAAQ,CAACI,MAAM,GAAG,CAAC,CAAC,CAACI,IAAI,GAAG,GAAG,GAAGR,QAAQ,CAACI,MAAM,GAAG,CAAC,CAAC,CAACK,OAAO;YAAE,MAAM,EAAEH;UAAI,CAAC,CAAC;;QAEtIJ,OAAO,GAAG,CAAC;;MAGf,IAAIQ,IAAI,GAAIA,CAACC,CAAO,EAAEC,CAAO,KAAI;QAC7B,OAAQA,CAAC,CAACC,EAAE,GAACF,CAAC,CAACE,EAAE;MACrB,CAAE;MAEF,IAAI,CAACrB,aAAa,CAACsB,IAAI,CAACJ,IAAI,CAAC;MAE7BK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACxB,aAAa,CAAC;IACnC,CAAC,CAAC;EACN;EAAC,QAAAyB,CAAA,G;qBAxCQjC,aAAa,EAAAkC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbxC,aAAa;IAAAyC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV1BZ,EAAA,CAAAc,SAAA,UAEM"},"metadata":{},"sourceType":"module","externalDependencies":[]}